---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: environmentfirewallrules.virtualenvironmentfirewallrules.crossplane.io
spec:
  group: virtualenvironmentfirewallrules.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - proxmoxbpg
    kind: EnvironmentFirewallRules
    listKind: EnvironmentFirewallRulesList
    plural: environmentfirewallrules
    singular: environmentfirewallrules
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: EnvironmentFirewallRules is the Schema for the EnvironmentFirewallRuless
          API. |  A security group is a collection of rules, defined at cluster level,
          which can be used in all VMs' rules. For example, you can define a group
          named “webserver” with rules to open the http and https ports. Rules can
          be created on the cluster level, on VM / Container level.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: EnvironmentFirewallRulesSpec defines the desired state of
              EnvironmentFirewallRules
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  containerId:
                    description: |-
                      Container ID. Leave empty for cluster level
                      rules.
                      The ID of the container to manage the firewall for.
                    type: number
                  nodeName:
                    description: |-
                      Node name. Leave empty for cluster level rules.
                      The name of the node.
                    type: string
                  rule:
                    description: |-
                      Firewall rule block (multiple blocks supported).
                      The provider supports two types of the rule blocks:
                      List of rules
                    items:
                      properties:
                        action:
                          description: |-
                            Rule action (ACCEPT, DROP, REJECT).
                            Rules action ('ACCEPT', 'DROP', 'REJECT')
                          type: string
                        comment:
                          description: |-
                            Rule comment.
                            Rules comment
                          type: string
                        dest:
                          description: |-
                            Restrict packet destination address. This can
                            refer to a single IP address, an IP set ('+ipsetname') or an IP
                            alias definition. You can also specify an address range
                            like 20.34.101.207-201.3.9.99, or a list of IP addresses and
                            networks (entries are separated by comma). Please do not mix IPv4
                            and IPv6 addresses inside such lists.
                            Restrict packet destination address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.
                          type: string
                        dport:
                          description: |-
                            Restrict TCP/UDP destination port. You can use
                            service names or simple numbers (0-65535), as defined
                            in /etc/services. Port ranges can be specified with '\d+:\d+', for
                            example 80:85, and you can use comma separated list to match
                            several ports or ranges.
                            Restrict TCP/UDP destination port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\d+:\d+', for example '80:85', and you can use comma separated list to match several ports or ranges.
                          type: string
                        enabled:
                          description: |-
                            Enable this rule. Defaults to true.
                            Enable rule
                          type: boolean
                        iface:
                          description: |-
                            Network interface name. You have to use network
                            configuration key names for VMs and containers ('net\d+'). Host
                            related rules can use arbitrary strings.
                            Network interface name. You have to use network configuration key names for VMs and containers ('net\d+'). Host related rules can use arbitrary strings.
                          type: string
                        log:
                          description: |-
                            Log level for this rule (emerg, alert, crit,
                            err, warning, notice, info, debug, nolog).
                            Log level for this rule ('emerg', 'alert', 'crit', 'err', 'warning', 'notice', 'info', 'debug', 'nolog')
                          type: string
                        macro:
                          description: |-
                            Macro name. Use predefined standard macro
                            from https://pve.proxmox.com/pve-docs/pve-admin-guide.html#_firewall_macro_definitions
                            Use predefined standard macro
                          type: string
                        proto:
                          description: |-
                            Restrict packet protocol. You can use protocol
                            names as defined in '/etc/protocols'.
                            Restrict packet protocol. You can use protocol names or simple numbers (0-255), as defined in '/etc/protocols'.
                          type: string
                        securityGroup:
                          description: |-
                            Security group name.
                            Security group name
                          type: string
                        source:
                          description: |-
                            Restrict packet source address. This can refer
                            to a single IP address, an IP set ('+ipsetname') or an IP alias
                            definition. You can also specify an address range
                            like 20.34.101.207-201.3.9.99, or a list of IP addresses and
                            networks (entries are separated by comma). Please do not mix IPv4
                            and IPv6 addresses inside such lists.
                            Restrict packet source address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.
                          type: string
                        sport:
                          description: |-
                            Restrict TCP/UDP source port. You can use
                            service names or simple numbers (0-65535), as defined
                            in /etc/services. Port ranges can be specified with '\d+:\d+', for
                            example 80:85, and you can use comma separated list to match
                            several ports or ranges.
                            Restrict TCP/UDP source port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\d+:\d+', for example '80:85', and you can use comma separated list to match several ports or ranges.
                          type: string
                        type:
                          description: |-
                            Rule type (in, out).
                            Rules type ('in', 'out')
                          type: string
                      type: object
                    type: array
                  vmId:
                    description: |-
                      VM ID. Leave empty for cluster level rules.
                      The ID of the VM to manage the firewall for.
                    type: number
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  containerId:
                    description: |-
                      Container ID. Leave empty for cluster level
                      rules.
                      The ID of the container to manage the firewall for.
                    type: number
                  nodeName:
                    description: |-
                      Node name. Leave empty for cluster level rules.
                      The name of the node.
                    type: string
                  rule:
                    description: |-
                      Firewall rule block (multiple blocks supported).
                      The provider supports two types of the rule blocks:
                      List of rules
                    items:
                      properties:
                        action:
                          description: |-
                            Rule action (ACCEPT, DROP, REJECT).
                            Rules action ('ACCEPT', 'DROP', 'REJECT')
                          type: string
                        comment:
                          description: |-
                            Rule comment.
                            Rules comment
                          type: string
                        dest:
                          description: |-
                            Restrict packet destination address. This can
                            refer to a single IP address, an IP set ('+ipsetname') or an IP
                            alias definition. You can also specify an address range
                            like 20.34.101.207-201.3.9.99, or a list of IP addresses and
                            networks (entries are separated by comma). Please do not mix IPv4
                            and IPv6 addresses inside such lists.
                            Restrict packet destination address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.
                          type: string
                        dport:
                          description: |-
                            Restrict TCP/UDP destination port. You can use
                            service names or simple numbers (0-65535), as defined
                            in /etc/services. Port ranges can be specified with '\d+:\d+', for
                            example 80:85, and you can use comma separated list to match
                            several ports or ranges.
                            Restrict TCP/UDP destination port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\d+:\d+', for example '80:85', and you can use comma separated list to match several ports or ranges.
                          type: string
                        enabled:
                          description: |-
                            Enable this rule. Defaults to true.
                            Enable rule
                          type: boolean
                        iface:
                          description: |-
                            Network interface name. You have to use network
                            configuration key names for VMs and containers ('net\d+'). Host
                            related rules can use arbitrary strings.
                            Network interface name. You have to use network configuration key names for VMs and containers ('net\d+'). Host related rules can use arbitrary strings.
                          type: string
                        log:
                          description: |-
                            Log level for this rule (emerg, alert, crit,
                            err, warning, notice, info, debug, nolog).
                            Log level for this rule ('emerg', 'alert', 'crit', 'err', 'warning', 'notice', 'info', 'debug', 'nolog')
                          type: string
                        macro:
                          description: |-
                            Macro name. Use predefined standard macro
                            from https://pve.proxmox.com/pve-docs/pve-admin-guide.html#_firewall_macro_definitions
                            Use predefined standard macro
                          type: string
                        proto:
                          description: |-
                            Restrict packet protocol. You can use protocol
                            names as defined in '/etc/protocols'.
                            Restrict packet protocol. You can use protocol names or simple numbers (0-255), as defined in '/etc/protocols'.
                          type: string
                        securityGroup:
                          description: |-
                            Security group name.
                            Security group name
                          type: string
                        source:
                          description: |-
                            Restrict packet source address. This can refer
                            to a single IP address, an IP set ('+ipsetname') or an IP alias
                            definition. You can also specify an address range
                            like 20.34.101.207-201.3.9.99, or a list of IP addresses and
                            networks (entries are separated by comma). Please do not mix IPv4
                            and IPv6 addresses inside such lists.
                            Restrict packet source address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.
                          type: string
                        sport:
                          description: |-
                            Restrict TCP/UDP source port. You can use
                            service names or simple numbers (0-65535), as defined
                            in /etc/services. Port ranges can be specified with '\d+:\d+', for
                            example 80:85, and you can use comma separated list to match
                            several ports or ranges.
                            Restrict TCP/UDP source port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\d+:\d+', for example '80:85', and you can use comma separated list to match several ports or ranges.
                          type: string
                        type:
                          description: |-
                            Rule type (in, out).
                            Rules type ('in', 'out')
                          type: string
                      type: object
                    type: array
                  vmId:
                    description: |-
                      VM ID. Leave empty for cluster level rules.
                      The ID of the VM to manage the firewall for.
                    type: number
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.rule is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.rule)
                || (has(self.initProvider) && has(self.initProvider.rule))'
          status:
            description: EnvironmentFirewallRulesStatus defines the observed state
              of EnvironmentFirewallRules.
            properties:
              atProvider:
                properties:
                  containerId:
                    description: |-
                      Container ID. Leave empty for cluster level
                      rules.
                      The ID of the container to manage the firewall for.
                    type: number
                  id:
                    type: string
                  nodeName:
                    description: |-
                      Node name. Leave empty for cluster level rules.
                      The name of the node.
                    type: string
                  rule:
                    description: |-
                      Firewall rule block (multiple blocks supported).
                      The provider supports two types of the rule blocks:
                      List of rules
                    items:
                      properties:
                        action:
                          description: |-
                            Rule action (ACCEPT, DROP, REJECT).
                            Rules action ('ACCEPT', 'DROP', 'REJECT')
                          type: string
                        comment:
                          description: |-
                            Rule comment.
                            Rules comment
                          type: string
                        dest:
                          description: |-
                            Restrict packet destination address. This can
                            refer to a single IP address, an IP set ('+ipsetname') or an IP
                            alias definition. You can also specify an address range
                            like 20.34.101.207-201.3.9.99, or a list of IP addresses and
                            networks (entries are separated by comma). Please do not mix IPv4
                            and IPv6 addresses inside such lists.
                            Restrict packet destination address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.
                          type: string
                        dport:
                          description: |-
                            Restrict TCP/UDP destination port. You can use
                            service names or simple numbers (0-65535), as defined
                            in /etc/services. Port ranges can be specified with '\d+:\d+', for
                            example 80:85, and you can use comma separated list to match
                            several ports or ranges.
                            Restrict TCP/UDP destination port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\d+:\d+', for example '80:85', and you can use comma separated list to match several ports or ranges.
                          type: string
                        enabled:
                          description: |-
                            Enable this rule. Defaults to true.
                            Enable rule
                          type: boolean
                        iface:
                          description: |-
                            Network interface name. You have to use network
                            configuration key names for VMs and containers ('net\d+'). Host
                            related rules can use arbitrary strings.
                            Network interface name. You have to use network configuration key names for VMs and containers ('net\d+'). Host related rules can use arbitrary strings.
                          type: string
                        log:
                          description: |-
                            Log level for this rule (emerg, alert, crit,
                            err, warning, notice, info, debug, nolog).
                            Log level for this rule ('emerg', 'alert', 'crit', 'err', 'warning', 'notice', 'info', 'debug', 'nolog')
                          type: string
                        macro:
                          description: |-
                            Macro name. Use predefined standard macro
                            from https://pve.proxmox.com/pve-docs/pve-admin-guide.html#_firewall_macro_definitions
                            Use predefined standard macro
                          type: string
                        pos:
                          description: |-
                            Position of the rule in the list.
                            Rules position
                          type: number
                        proto:
                          description: |-
                            Restrict packet protocol. You can use protocol
                            names as defined in '/etc/protocols'.
                            Restrict packet protocol. You can use protocol names or simple numbers (0-255), as defined in '/etc/protocols'.
                          type: string
                        securityGroup:
                          description: |-
                            Security group name.
                            Security group name
                          type: string
                        source:
                          description: |-
                            Restrict packet source address. This can refer
                            to a single IP address, an IP set ('+ipsetname') or an IP alias
                            definition. You can also specify an address range
                            like 20.34.101.207-201.3.9.99, or a list of IP addresses and
                            networks (entries are separated by comma). Please do not mix IPv4
                            and IPv6 addresses inside such lists.
                            Restrict packet source address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.
                          type: string
                        sport:
                          description: |-
                            Restrict TCP/UDP source port. You can use
                            service names or simple numbers (0-65535), as defined
                            in /etc/services. Port ranges can be specified with '\d+:\d+', for
                            example 80:85, and you can use comma separated list to match
                            several ports or ranges.
                            Restrict TCP/UDP source port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\d+:\d+', for example '80:85', and you can use comma separated list to match several ports or ranges.
                          type: string
                        type:
                          description: |-
                            Rule type (in, out).
                            Rules type ('in', 'out')
                          type: string
                      type: object
                    type: array
                  vmId:
                    description: |-
                      VM ID. Leave empty for cluster level rules.
                      The ID of the VM to manage the firewall for.
                    type: number
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
