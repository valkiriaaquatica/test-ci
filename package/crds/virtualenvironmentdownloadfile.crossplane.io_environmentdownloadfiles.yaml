---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: environmentdownloadfiles.virtualenvironmentdownloadfile.crossplane.io
spec:
  group: virtualenvironmentdownloadfile.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - proxmoxbpg
    kind: EnvironmentDownloadFile
    listKind: EnvironmentDownloadFileList
    plural: environmentdownloadfiles
    singular: environmentdownloadfile
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: EnvironmentDownloadFile is the Schema for the EnvironmentDownloadFiles
          API. Manages files upload using PVE download-url API. It can be fully compatible
          and faster replacement for image files created using proxmox_virtual_environment_file.
          Supports images for VMs (ISO and disk images) and LXC (CT Templates).
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: EnvironmentDownloadFileSpec defines the desired state of
              EnvironmentDownloadFile
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  checksum:
                    description: |-
                      (String) The expected checksum of the file.
                      The expected checksum of the file.
                    type: string
                  checksumAlgorithm:
                    description: |-
                      (String) The algorithm to calculate the checksum of the file. Must be md5 | sha1 | sha224 | sha256 | sha384 | sha512.
                      The algorithm to calculate the checksum of the file. Must be `md5` | `sha1` | `sha224` | `sha256` | `sha384` | `sha512`.
                    type: string
                  contentType:
                    description: |-
                      (String) The file content type. Must be iso or import for VM images or vztmpl for LXC images.
                      The file content type. Must be `iso` or `import` for VM images or `vztmpl` for LXC images.
                    type: string
                  datastoreId:
                    description: |-
                      (String) The identifier for the target datastore.
                      The identifier for the target datastore.
                    type: string
                  decompressionAlgorithm:
                    description: |-
                      (String) Decompress the downloaded file using the specified compression algorithm. Must be one of gz | lzo | zst | bz2.
                      Decompress the downloaded file using the specified compression algorithm. Must be one of `gz` | `lzo` | `zst` | `bz2`.
                    type: string
                  fileName:
                    description: |-
                      (String) The file name. If not provided, it is calculated using url. PVE will raise 'wrong file extension' error for some popular extensions file .raw or .qcow2 on PVE versions prior to 8.4. Workaround is to use e.g. .img instead.
                      The file name. If not provided, it is calculated using `url`. PVE will raise 'wrong file extension' error for some popular extensions file `.raw` or `.qcow2` on PVE versions prior to 8.4. Workaround is to use e.g. `.img` instead.
                    type: string
                  nodeName:
                    description: |-
                      (String) The node name.
                      The node name.
                    type: string
                  overwrite:
                    description: |-
                      (Boolean) By default true. If true and file size has changed in the datastore, it will be replaced. If false, there will be no check.
                      By default `true`. If `true` and file size has changed in the datastore, it will be replaced. If `false`, there will be no check.
                    type: boolean
                  overwriteUnmanaged:
                    description: |-
                      (Boolean) If true and a file with the same name already exists in the datastore, it will be deleted and the new file will be downloaded. If false and the file already exists, an error will be returned.
                      If `true` and a file with the same name already exists in the datastore, it will be deleted and the new file will be downloaded. If `false` and the file already exists, an error will be returned.
                    type: boolean
                  uploadTimeout:
                    description: |-
                      (Number) The file download timeout seconds. Default is 600 (10min).
                      The file download timeout seconds. Default is 600 (10min).
                    type: number
                  url:
                    description: |-
                      (String) The URL to download the file from. Must match regex: https?://.*.
                      The URL to download the file from. Must match regex: `https?://.*`.
                    type: string
                  verify:
                    description: |-
                      (Boolean) By default true. If false, no SSL/TLS certificates will be verified.
                      By default `true`. If `false`, no SSL/TLS certificates will be verified.
                    type: boolean
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  checksum:
                    description: |-
                      (String) The expected checksum of the file.
                      The expected checksum of the file.
                    type: string
                  checksumAlgorithm:
                    description: |-
                      (String) The algorithm to calculate the checksum of the file. Must be md5 | sha1 | sha224 | sha256 | sha384 | sha512.
                      The algorithm to calculate the checksum of the file. Must be `md5` | `sha1` | `sha224` | `sha256` | `sha384` | `sha512`.
                    type: string
                  contentType:
                    description: |-
                      (String) The file content type. Must be iso or import for VM images or vztmpl for LXC images.
                      The file content type. Must be `iso` or `import` for VM images or `vztmpl` for LXC images.
                    type: string
                  datastoreId:
                    description: |-
                      (String) The identifier for the target datastore.
                      The identifier for the target datastore.
                    type: string
                  decompressionAlgorithm:
                    description: |-
                      (String) Decompress the downloaded file using the specified compression algorithm. Must be one of gz | lzo | zst | bz2.
                      Decompress the downloaded file using the specified compression algorithm. Must be one of `gz` | `lzo` | `zst` | `bz2`.
                    type: string
                  fileName:
                    description: |-
                      (String) The file name. If not provided, it is calculated using url. PVE will raise 'wrong file extension' error for some popular extensions file .raw or .qcow2 on PVE versions prior to 8.4. Workaround is to use e.g. .img instead.
                      The file name. If not provided, it is calculated using `url`. PVE will raise 'wrong file extension' error for some popular extensions file `.raw` or `.qcow2` on PVE versions prior to 8.4. Workaround is to use e.g. `.img` instead.
                    type: string
                  nodeName:
                    description: |-
                      (String) The node name.
                      The node name.
                    type: string
                  overwrite:
                    description: |-
                      (Boolean) By default true. If true and file size has changed in the datastore, it will be replaced. If false, there will be no check.
                      By default `true`. If `true` and file size has changed in the datastore, it will be replaced. If `false`, there will be no check.
                    type: boolean
                  overwriteUnmanaged:
                    description: |-
                      (Boolean) If true and a file with the same name already exists in the datastore, it will be deleted and the new file will be downloaded. If false and the file already exists, an error will be returned.
                      If `true` and a file with the same name already exists in the datastore, it will be deleted and the new file will be downloaded. If `false` and the file already exists, an error will be returned.
                    type: boolean
                  uploadTimeout:
                    description: |-
                      (Number) The file download timeout seconds. Default is 600 (10min).
                      The file download timeout seconds. Default is 600 (10min).
                    type: number
                  url:
                    description: |-
                      (String) The URL to download the file from. Must match regex: https?://.*.
                      The URL to download the file from. Must match regex: `https?://.*`.
                    type: string
                  verify:
                    description: |-
                      (Boolean) By default true. If false, no SSL/TLS certificates will be verified.
                      By default `true`. If `false`, no SSL/TLS certificates will be verified.
                    type: boolean
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.contentType is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.contentType)
                || (has(self.initProvider) && has(self.initProvider.contentType))'
            - message: spec.forProvider.datastoreId is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.datastoreId)
                || (has(self.initProvider) && has(self.initProvider.datastoreId))'
            - message: spec.forProvider.nodeName is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.nodeName)
                || (has(self.initProvider) && has(self.initProvider.nodeName))'
            - message: spec.forProvider.url is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.url)
                || (has(self.initProvider) && has(self.initProvider.url))'
          status:
            description: EnvironmentDownloadFileStatus defines the observed state
              of EnvironmentDownloadFile.
            properties:
              atProvider:
                properties:
                  checksum:
                    description: |-
                      (String) The expected checksum of the file.
                      The expected checksum of the file.
                    type: string
                  checksumAlgorithm:
                    description: |-
                      (String) The algorithm to calculate the checksum of the file. Must be md5 | sha1 | sha224 | sha256 | sha384 | sha512.
                      The algorithm to calculate the checksum of the file. Must be `md5` | `sha1` | `sha224` | `sha256` | `sha384` | `sha512`.
                    type: string
                  contentType:
                    description: |-
                      (String) The file content type. Must be iso or import for VM images or vztmpl for LXC images.
                      The file content type. Must be `iso` or `import` for VM images or `vztmpl` for LXC images.
                    type: string
                  datastoreId:
                    description: |-
                      (String) The identifier for the target datastore.
                      The identifier for the target datastore.
                    type: string
                  decompressionAlgorithm:
                    description: |-
                      (String) Decompress the downloaded file using the specified compression algorithm. Must be one of gz | lzo | zst | bz2.
                      Decompress the downloaded file using the specified compression algorithm. Must be one of `gz` | `lzo` | `zst` | `bz2`.
                    type: string
                  fileName:
                    description: |-
                      (String) The file name. If not provided, it is calculated using url. PVE will raise 'wrong file extension' error for some popular extensions file .raw or .qcow2 on PVE versions prior to 8.4. Workaround is to use e.g. .img instead.
                      The file name. If not provided, it is calculated using `url`. PVE will raise 'wrong file extension' error for some popular extensions file `.raw` or `.qcow2` on PVE versions prior to 8.4. Workaround is to use e.g. `.img` instead.
                    type: string
                  id:
                    description: (String) The unique identifier of this resource.
                    type: string
                  nodeName:
                    description: |-
                      (String) The node name.
                      The node name.
                    type: string
                  overwrite:
                    description: |-
                      (Boolean) By default true. If true and file size has changed in the datastore, it will be replaced. If false, there will be no check.
                      By default `true`. If `true` and file size has changed in the datastore, it will be replaced. If `false`, there will be no check.
                    type: boolean
                  overwriteUnmanaged:
                    description: |-
                      (Boolean) If true and a file with the same name already exists in the datastore, it will be deleted and the new file will be downloaded. If false and the file already exists, an error will be returned.
                      If `true` and a file with the same name already exists in the datastore, it will be deleted and the new file will be downloaded. If `false` and the file already exists, an error will be returned.
                    type: boolean
                  size:
                    description: |-
                      (Number) The file size in PVE.
                      The file size in PVE.
                    type: number
                  uploadTimeout:
                    description: |-
                      (Number) The file download timeout seconds. Default is 600 (10min).
                      The file download timeout seconds. Default is 600 (10min).
                    type: number
                  url:
                    description: |-
                      (String) The URL to download the file from. Must match regex: https?://.*.
                      The URL to download the file from. Must match regex: `https?://.*`.
                    type: string
                  verify:
                    description: |-
                      (Boolean) By default true. If false, no SSL/TLS certificates will be verified.
                      By default `true`. If `false`, no SSL/TLS certificates will be verified.
                    type: boolean
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
