//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AgentInitParameters) DeepCopyInto(out *AgentInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(string)
		**out = **in
	}
	if in.Trim != nil {
		in, out := &in.Trim, &out.Trim
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AgentInitParameters.
func (in *AgentInitParameters) DeepCopy() *AgentInitParameters {
	if in == nil {
		return nil
	}
	out := new(AgentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AgentObservation) DeepCopyInto(out *AgentObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(string)
		**out = **in
	}
	if in.Trim != nil {
		in, out := &in.Trim, &out.Trim
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AgentObservation.
func (in *AgentObservation) DeepCopy() *AgentObservation {
	if in == nil {
		return nil
	}
	out := new(AgentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AgentParameters) DeepCopyInto(out *AgentParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(string)
		**out = **in
	}
	if in.Trim != nil {
		in, out := &in.Trim, &out.Trim
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AgentParameters.
func (in *AgentParameters) DeepCopy() *AgentParameters {
	if in == nil {
		return nil
	}
	out := new(AgentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AmdSevInitParameters) DeepCopyInto(out *AmdSevInitParameters) {
	*out = *in
	if in.AllowSmt != nil {
		in, out := &in.AllowSmt, &out.AllowSmt
		*out = new(bool)
		**out = **in
	}
	if in.KernelHashes != nil {
		in, out := &in.KernelHashes, &out.KernelHashes
		*out = new(bool)
		**out = **in
	}
	if in.NoDebug != nil {
		in, out := &in.NoDebug, &out.NoDebug
		*out = new(bool)
		**out = **in
	}
	if in.NoKeySharing != nil {
		in, out := &in.NoKeySharing, &out.NoKeySharing
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AmdSevInitParameters.
func (in *AmdSevInitParameters) DeepCopy() *AmdSevInitParameters {
	if in == nil {
		return nil
	}
	out := new(AmdSevInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AmdSevObservation) DeepCopyInto(out *AmdSevObservation) {
	*out = *in
	if in.AllowSmt != nil {
		in, out := &in.AllowSmt, &out.AllowSmt
		*out = new(bool)
		**out = **in
	}
	if in.KernelHashes != nil {
		in, out := &in.KernelHashes, &out.KernelHashes
		*out = new(bool)
		**out = **in
	}
	if in.NoDebug != nil {
		in, out := &in.NoDebug, &out.NoDebug
		*out = new(bool)
		**out = **in
	}
	if in.NoKeySharing != nil {
		in, out := &in.NoKeySharing, &out.NoKeySharing
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AmdSevObservation.
func (in *AmdSevObservation) DeepCopy() *AmdSevObservation {
	if in == nil {
		return nil
	}
	out := new(AmdSevObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AmdSevParameters) DeepCopyInto(out *AmdSevParameters) {
	*out = *in
	if in.AllowSmt != nil {
		in, out := &in.AllowSmt, &out.AllowSmt
		*out = new(bool)
		**out = **in
	}
	if in.KernelHashes != nil {
		in, out := &in.KernelHashes, &out.KernelHashes
		*out = new(bool)
		**out = **in
	}
	if in.NoDebug != nil {
		in, out := &in.NoDebug, &out.NoDebug
		*out = new(bool)
		**out = **in
	}
	if in.NoKeySharing != nil {
		in, out := &in.NoKeySharing, &out.NoKeySharing
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AmdSevParameters.
func (in *AmdSevParameters) DeepCopy() *AmdSevParameters {
	if in == nil {
		return nil
	}
	out := new(AmdSevParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AudioDeviceInitParameters) DeepCopyInto(out *AudioDeviceInitParameters) {
	*out = *in
	if in.Device != nil {
		in, out := &in.Device, &out.Device
		*out = new(string)
		**out = **in
	}
	if in.Driver != nil {
		in, out := &in.Driver, &out.Driver
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AudioDeviceInitParameters.
func (in *AudioDeviceInitParameters) DeepCopy() *AudioDeviceInitParameters {
	if in == nil {
		return nil
	}
	out := new(AudioDeviceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AudioDeviceObservation) DeepCopyInto(out *AudioDeviceObservation) {
	*out = *in
	if in.Device != nil {
		in, out := &in.Device, &out.Device
		*out = new(string)
		**out = **in
	}
	if in.Driver != nil {
		in, out := &in.Driver, &out.Driver
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AudioDeviceObservation.
func (in *AudioDeviceObservation) DeepCopy() *AudioDeviceObservation {
	if in == nil {
		return nil
	}
	out := new(AudioDeviceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AudioDeviceParameters) DeepCopyInto(out *AudioDeviceParameters) {
	*out = *in
	if in.Device != nil {
		in, out := &in.Device, &out.Device
		*out = new(string)
		**out = **in
	}
	if in.Driver != nil {
		in, out := &in.Driver, &out.Driver
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AudioDeviceParameters.
func (in *AudioDeviceParameters) DeepCopy() *AudioDeviceParameters {
	if in == nil {
		return nil
	}
	out := new(AudioDeviceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CPUInitParameters) DeepCopyInto(out *CPUInitParameters) {
	*out = *in
	if in.Affinity != nil {
		in, out := &in.Affinity, &out.Affinity
		*out = new(string)
		**out = **in
	}
	if in.Architecture != nil {
		in, out := &in.Architecture, &out.Architecture
		*out = new(string)
		**out = **in
	}
	if in.Cores != nil {
		in, out := &in.Cores, &out.Cores
		*out = new(float64)
		**out = **in
	}
	if in.Flags != nil {
		in, out := &in.Flags, &out.Flags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Hotplugged != nil {
		in, out := &in.Hotplugged, &out.Hotplugged
		*out = new(float64)
		**out = **in
	}
	if in.Limit != nil {
		in, out := &in.Limit, &out.Limit
		*out = new(float64)
		**out = **in
	}
	if in.Numa != nil {
		in, out := &in.Numa, &out.Numa
		*out = new(bool)
		**out = **in
	}
	if in.Sockets != nil {
		in, out := &in.Sockets, &out.Sockets
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Units != nil {
		in, out := &in.Units, &out.Units
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CPUInitParameters.
func (in *CPUInitParameters) DeepCopy() *CPUInitParameters {
	if in == nil {
		return nil
	}
	out := new(CPUInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CPUObservation) DeepCopyInto(out *CPUObservation) {
	*out = *in
	if in.Affinity != nil {
		in, out := &in.Affinity, &out.Affinity
		*out = new(string)
		**out = **in
	}
	if in.Architecture != nil {
		in, out := &in.Architecture, &out.Architecture
		*out = new(string)
		**out = **in
	}
	if in.Cores != nil {
		in, out := &in.Cores, &out.Cores
		*out = new(float64)
		**out = **in
	}
	if in.Flags != nil {
		in, out := &in.Flags, &out.Flags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Hotplugged != nil {
		in, out := &in.Hotplugged, &out.Hotplugged
		*out = new(float64)
		**out = **in
	}
	if in.Limit != nil {
		in, out := &in.Limit, &out.Limit
		*out = new(float64)
		**out = **in
	}
	if in.Numa != nil {
		in, out := &in.Numa, &out.Numa
		*out = new(bool)
		**out = **in
	}
	if in.Sockets != nil {
		in, out := &in.Sockets, &out.Sockets
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Units != nil {
		in, out := &in.Units, &out.Units
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CPUObservation.
func (in *CPUObservation) DeepCopy() *CPUObservation {
	if in == nil {
		return nil
	}
	out := new(CPUObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CPUParameters) DeepCopyInto(out *CPUParameters) {
	*out = *in
	if in.Affinity != nil {
		in, out := &in.Affinity, &out.Affinity
		*out = new(string)
		**out = **in
	}
	if in.Architecture != nil {
		in, out := &in.Architecture, &out.Architecture
		*out = new(string)
		**out = **in
	}
	if in.Cores != nil {
		in, out := &in.Cores, &out.Cores
		*out = new(float64)
		**out = **in
	}
	if in.Flags != nil {
		in, out := &in.Flags, &out.Flags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Hotplugged != nil {
		in, out := &in.Hotplugged, &out.Hotplugged
		*out = new(float64)
		**out = **in
	}
	if in.Limit != nil {
		in, out := &in.Limit, &out.Limit
		*out = new(float64)
		**out = **in
	}
	if in.Numa != nil {
		in, out := &in.Numa, &out.Numa
		*out = new(bool)
		**out = **in
	}
	if in.Sockets != nil {
		in, out := &in.Sockets, &out.Sockets
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Units != nil {
		in, out := &in.Units, &out.Units
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CPUParameters.
func (in *CPUParameters) DeepCopy() *CPUParameters {
	if in == nil {
		return nil
	}
	out := new(CPUParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CdromInitParameters) DeepCopyInto(out *CdromInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.FileID != nil {
		in, out := &in.FileID, &out.FileID
		*out = new(string)
		**out = **in
	}
	if in.Interface != nil {
		in, out := &in.Interface, &out.Interface
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CdromInitParameters.
func (in *CdromInitParameters) DeepCopy() *CdromInitParameters {
	if in == nil {
		return nil
	}
	out := new(CdromInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CdromObservation) DeepCopyInto(out *CdromObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.FileID != nil {
		in, out := &in.FileID, &out.FileID
		*out = new(string)
		**out = **in
	}
	if in.Interface != nil {
		in, out := &in.Interface, &out.Interface
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CdromObservation.
func (in *CdromObservation) DeepCopy() *CdromObservation {
	if in == nil {
		return nil
	}
	out := new(CdromObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CdromParameters) DeepCopyInto(out *CdromParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.FileID != nil {
		in, out := &in.FileID, &out.FileID
		*out = new(string)
		**out = **in
	}
	if in.Interface != nil {
		in, out := &in.Interface, &out.Interface
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CdromParameters.
func (in *CdromParameters) DeepCopy() *CdromParameters {
	if in == nil {
		return nil
	}
	out := new(CdromParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloneInitParameters) DeepCopyInto(out *CloneInitParameters) {
	*out = *in
	if in.DatastoreID != nil {
		in, out := &in.DatastoreID, &out.DatastoreID
		*out = new(string)
		**out = **in
	}
	if in.Full != nil {
		in, out := &in.Full, &out.Full
		*out = new(bool)
		**out = **in
	}
	if in.NodeName != nil {
		in, out := &in.NodeName, &out.NodeName
		*out = new(string)
		**out = **in
	}
	if in.Retries != nil {
		in, out := &in.Retries, &out.Retries
		*out = new(float64)
		**out = **in
	}
	if in.VMID != nil {
		in, out := &in.VMID, &out.VMID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloneInitParameters.
func (in *CloneInitParameters) DeepCopy() *CloneInitParameters {
	if in == nil {
		return nil
	}
	out := new(CloneInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloneObservation) DeepCopyInto(out *CloneObservation) {
	*out = *in
	if in.DatastoreID != nil {
		in, out := &in.DatastoreID, &out.DatastoreID
		*out = new(string)
		**out = **in
	}
	if in.Full != nil {
		in, out := &in.Full, &out.Full
		*out = new(bool)
		**out = **in
	}
	if in.NodeName != nil {
		in, out := &in.NodeName, &out.NodeName
		*out = new(string)
		**out = **in
	}
	if in.Retries != nil {
		in, out := &in.Retries, &out.Retries
		*out = new(float64)
		**out = **in
	}
	if in.VMID != nil {
		in, out := &in.VMID, &out.VMID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloneObservation.
func (in *CloneObservation) DeepCopy() *CloneObservation {
	if in == nil {
		return nil
	}
	out := new(CloneObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloneParameters) DeepCopyInto(out *CloneParameters) {
	*out = *in
	if in.DatastoreID != nil {
		in, out := &in.DatastoreID, &out.DatastoreID
		*out = new(string)
		**out = **in
	}
	if in.Full != nil {
		in, out := &in.Full, &out.Full
		*out = new(bool)
		**out = **in
	}
	if in.NodeName != nil {
		in, out := &in.NodeName, &out.NodeName
		*out = new(string)
		**out = **in
	}
	if in.Retries != nil {
		in, out := &in.Retries, &out.Retries
		*out = new(float64)
		**out = **in
	}
	if in.VMID != nil {
		in, out := &in.VMID, &out.VMID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloneParameters.
func (in *CloneParameters) DeepCopy() *CloneParameters {
	if in == nil {
		return nil
	}
	out := new(CloneParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSInitParameters) DeepCopyInto(out *DNSInitParameters) {
	*out = *in
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
	if in.Servers != nil {
		in, out := &in.Servers, &out.Servers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSInitParameters.
func (in *DNSInitParameters) DeepCopy() *DNSInitParameters {
	if in == nil {
		return nil
	}
	out := new(DNSInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSObservation) DeepCopyInto(out *DNSObservation) {
	*out = *in
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
	if in.Servers != nil {
		in, out := &in.Servers, &out.Servers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSObservation.
func (in *DNSObservation) DeepCopy() *DNSObservation {
	if in == nil {
		return nil
	}
	out := new(DNSObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSParameters) DeepCopyInto(out *DNSParameters) {
	*out = *in
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
	if in.Servers != nil {
		in, out := &in.Servers, &out.Servers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSParameters.
func (in *DNSParameters) DeepCopy() *DNSParameters {
	if in == nil {
		return nil
	}
	out := new(DNSParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskInitParameters) DeepCopyInto(out *DiskInitParameters) {
	*out = *in
	if in.Aio != nil {
		in, out := &in.Aio, &out.Aio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.DatastoreID != nil {
		in, out := &in.DatastoreID, &out.DatastoreID
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(string)
		**out = **in
	}
	if in.FileFormat != nil {
		in, out := &in.FileFormat, &out.FileFormat
		*out = new(string)
		**out = **in
	}
	if in.FileID != nil {
		in, out := &in.FileID, &out.FileID
		*out = new(string)
		**out = **in
	}
	if in.ImportFrom != nil {
		in, out := &in.ImportFrom, &out.ImportFrom
		*out = new(string)
		**out = **in
	}
	if in.Interface != nil {
		in, out := &in.Interface, &out.Interface
		*out = new(string)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.PathInDatastore != nil {
		in, out := &in.PathInDatastore, &out.PathInDatastore
		*out = new(string)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Speed != nil {
		in, out := &in.Speed, &out.Speed
		*out = make([]SpeedInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ssd != nil {
		in, out := &in.Ssd, &out.Ssd
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskInitParameters.
func (in *DiskInitParameters) DeepCopy() *DiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(DiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskObservation) DeepCopyInto(out *DiskObservation) {
	*out = *in
	if in.Aio != nil {
		in, out := &in.Aio, &out.Aio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.DatastoreID != nil {
		in, out := &in.DatastoreID, &out.DatastoreID
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(string)
		**out = **in
	}
	if in.FileFormat != nil {
		in, out := &in.FileFormat, &out.FileFormat
		*out = new(string)
		**out = **in
	}
	if in.FileID != nil {
		in, out := &in.FileID, &out.FileID
		*out = new(string)
		**out = **in
	}
	if in.ImportFrom != nil {
		in, out := &in.ImportFrom, &out.ImportFrom
		*out = new(string)
		**out = **in
	}
	if in.Interface != nil {
		in, out := &in.Interface, &out.Interface
		*out = new(string)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.PathInDatastore != nil {
		in, out := &in.PathInDatastore, &out.PathInDatastore
		*out = new(string)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Speed != nil {
		in, out := &in.Speed, &out.Speed
		*out = make([]SpeedObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ssd != nil {
		in, out := &in.Ssd, &out.Ssd
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskObservation.
func (in *DiskObservation) DeepCopy() *DiskObservation {
	if in == nil {
		return nil
	}
	out := new(DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskParameters) DeepCopyInto(out *DiskParameters) {
	*out = *in
	if in.Aio != nil {
		in, out := &in.Aio, &out.Aio
		*out = new(string)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(bool)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.DatastoreID != nil {
		in, out := &in.DatastoreID, &out.DatastoreID
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(string)
		**out = **in
	}
	if in.FileFormat != nil {
		in, out := &in.FileFormat, &out.FileFormat
		*out = new(string)
		**out = **in
	}
	if in.FileID != nil {
		in, out := &in.FileID, &out.FileID
		*out = new(string)
		**out = **in
	}
	if in.ImportFrom != nil {
		in, out := &in.ImportFrom, &out.ImportFrom
		*out = new(string)
		**out = **in
	}
	if in.Interface != nil {
		in, out := &in.Interface, &out.Interface
		*out = new(string)
		**out = **in
	}
	if in.Iothread != nil {
		in, out := &in.Iothread, &out.Iothread
		*out = new(bool)
		**out = **in
	}
	if in.PathInDatastore != nil {
		in, out := &in.PathInDatastore, &out.PathInDatastore
		*out = new(string)
		**out = **in
	}
	if in.Replicate != nil {
		in, out := &in.Replicate, &out.Replicate
		*out = new(bool)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Speed != nil {
		in, out := &in.Speed, &out.Speed
		*out = make([]SpeedParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ssd != nil {
		in, out := &in.Ssd, &out.Ssd
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskParameters.
func (in *DiskParameters) DeepCopy() *DiskParameters {
	if in == nil {
		return nil
	}
	out := new(DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EfiDiskInitParameters) DeepCopyInto(out *EfiDiskInitParameters) {
	*out = *in
	if in.DatastoreID != nil {
		in, out := &in.DatastoreID, &out.DatastoreID
		*out = new(string)
		**out = **in
	}
	if in.FileFormat != nil {
		in, out := &in.FileFormat, &out.FileFormat
		*out = new(string)
		**out = **in
	}
	if in.PreEnrolledKeys != nil {
		in, out := &in.PreEnrolledKeys, &out.PreEnrolledKeys
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EfiDiskInitParameters.
func (in *EfiDiskInitParameters) DeepCopy() *EfiDiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(EfiDiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EfiDiskObservation) DeepCopyInto(out *EfiDiskObservation) {
	*out = *in
	if in.DatastoreID != nil {
		in, out := &in.DatastoreID, &out.DatastoreID
		*out = new(string)
		**out = **in
	}
	if in.FileFormat != nil {
		in, out := &in.FileFormat, &out.FileFormat
		*out = new(string)
		**out = **in
	}
	if in.PreEnrolledKeys != nil {
		in, out := &in.PreEnrolledKeys, &out.PreEnrolledKeys
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EfiDiskObservation.
func (in *EfiDiskObservation) DeepCopy() *EfiDiskObservation {
	if in == nil {
		return nil
	}
	out := new(EfiDiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EfiDiskParameters) DeepCopyInto(out *EfiDiskParameters) {
	*out = *in
	if in.DatastoreID != nil {
		in, out := &in.DatastoreID, &out.DatastoreID
		*out = new(string)
		**out = **in
	}
	if in.FileFormat != nil {
		in, out := &in.FileFormat, &out.FileFormat
		*out = new(string)
		**out = **in
	}
	if in.PreEnrolledKeys != nil {
		in, out := &in.PreEnrolledKeys, &out.PreEnrolledKeys
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EfiDiskParameters.
func (in *EfiDiskParameters) DeepCopy() *EfiDiskParameters {
	if in == nil {
		return nil
	}
	out := new(EfiDiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentVM) DeepCopyInto(out *EnvironmentVM) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentVM.
func (in *EnvironmentVM) DeepCopy() *EnvironmentVM {
	if in == nil {
		return nil
	}
	out := new(EnvironmentVM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EnvironmentVM) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentVMInitParameters) DeepCopyInto(out *EnvironmentVMInitParameters) {
	*out = *in
	if in.Acpi != nil {
		in, out := &in.Acpi, &out.Acpi
		*out = new(bool)
		**out = **in
	}
	if in.Agent != nil {
		in, out := &in.Agent, &out.Agent
		*out = make([]AgentInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AmdSev != nil {
		in, out := &in.AmdSev, &out.AmdSev
		*out = make([]AmdSevInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AudioDevice != nil {
		in, out := &in.AudioDevice, &out.AudioDevice
		*out = make([]AudioDeviceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Bios != nil {
		in, out := &in.Bios, &out.Bios
		*out = new(string)
		**out = **in
	}
	if in.BootOrder != nil {
		in, out := &in.BootOrder, &out.BootOrder
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = make([]CPUInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]CdromInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Clone != nil {
		in, out := &in.Clone, &out.Clone
		*out = make([]CloneInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]DiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EfiDisk != nil {
		in, out := &in.EfiDisk, &out.EfiDisk
		*out = make([]EfiDiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HookScriptFileID != nil {
		in, out := &in.HookScriptFileID, &out.HookScriptFileID
		*out = new(string)
		**out = **in
	}
	if in.Hostpci != nil {
		in, out := &in.Hostpci, &out.Hostpci
		*out = make([]HostpciInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Initialization != nil {
		in, out := &in.Initialization, &out.Initialization
		*out = make([]InitializationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KeyboardLayout != nil {
		in, out := &in.KeyboardLayout, &out.KeyboardLayout
		*out = new(string)
		**out = **in
	}
	if in.KvmArguments != nil {
		in, out := &in.KvmArguments, &out.KvmArguments
		*out = new(string)
		**out = **in
	}
	if in.MacAddresses != nil {
		in, out := &in.MacAddresses, &out.MacAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Machine != nil {
		in, out := &in.Machine, &out.Machine
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = make([]MemoryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Migrate != nil {
		in, out := &in.Migrate, &out.Migrate
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkDevice != nil {
		in, out := &in.NetworkDevice, &out.NetworkDevice
		*out = make([]NetworkDeviceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeName != nil {
		in, out := &in.NodeName, &out.NodeName
		*out = new(string)
		**out = **in
	}
	if in.Numa != nil {
		in, out := &in.Numa, &out.Numa
		*out = make([]NumaInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnBoot != nil {
		in, out := &in.OnBoot, &out.OnBoot
		*out = new(bool)
		**out = **in
	}
	if in.OperatingSystem != nil {
		in, out := &in.OperatingSystem, &out.OperatingSystem
		*out = make([]OperatingSystemInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PoolID != nil {
		in, out := &in.PoolID, &out.PoolID
		*out = new(string)
		**out = **in
	}
	if in.Protection != nil {
		in, out := &in.Protection, &out.Protection
		*out = new(bool)
		**out = **in
	}
	if in.Reboot != nil {
		in, out := &in.Reboot, &out.Reboot
		*out = new(bool)
		**out = **in
	}
	if in.RebootAfterUpdate != nil {
		in, out := &in.RebootAfterUpdate, &out.RebootAfterUpdate
		*out = new(bool)
		**out = **in
	}
	if in.Rng != nil {
		in, out := &in.Rng, &out.Rng
		*out = make([]RngInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScsiHardware != nil {
		in, out := &in.ScsiHardware, &out.ScsiHardware
		*out = new(string)
		**out = **in
	}
	if in.SerialDevice != nil {
		in, out := &in.SerialDevice, &out.SerialDevice
		*out = make([]SerialDeviceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Smbios != nil {
		in, out := &in.Smbios, &out.Smbios
		*out = make([]SmbiosInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Started != nil {
		in, out := &in.Started, &out.Started
		*out = new(bool)
		**out = **in
	}
	if in.Startup != nil {
		in, out := &in.Startup, &out.Startup
		*out = make([]StartupInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StopOnDestroy != nil {
		in, out := &in.StopOnDestroy, &out.StopOnDestroy
		*out = new(bool)
		**out = **in
	}
	if in.TabletDevice != nil {
		in, out := &in.TabletDevice, &out.TabletDevice
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Template != nil {
		in, out := &in.Template, &out.Template
		*out = new(bool)
		**out = **in
	}
	if in.TimeoutClone != nil {
		in, out := &in.TimeoutClone, &out.TimeoutClone
		*out = new(float64)
		**out = **in
	}
	if in.TimeoutCreate != nil {
		in, out := &in.TimeoutCreate, &out.TimeoutCreate
		*out = new(float64)
		**out = **in
	}
	if in.TimeoutMigrate != nil {
		in, out := &in.TimeoutMigrate, &out.TimeoutMigrate
		*out = new(float64)
		**out = **in
	}
	if in.TimeoutMoveDisk != nil {
		in, out := &in.TimeoutMoveDisk, &out.TimeoutMoveDisk
		*out = new(float64)
		**out = **in
	}
	if in.TimeoutReboot != nil {
		in, out := &in.TimeoutReboot, &out.TimeoutReboot
		*out = new(float64)
		**out = **in
	}
	if in.TimeoutShutdownVM != nil {
		in, out := &in.TimeoutShutdownVM, &out.TimeoutShutdownVM
		*out = new(float64)
		**out = **in
	}
	if in.TimeoutStartVM != nil {
		in, out := &in.TimeoutStartVM, &out.TimeoutStartVM
		*out = new(float64)
		**out = **in
	}
	if in.TimeoutStopVM != nil {
		in, out := &in.TimeoutStopVM, &out.TimeoutStopVM
		*out = new(float64)
		**out = **in
	}
	if in.TpmState != nil {
		in, out := &in.TpmState, &out.TpmState
		*out = make([]TpmStateInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Usb != nil {
		in, out := &in.Usb, &out.Usb
		*out = make([]UsbInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VMID != nil {
		in, out := &in.VMID, &out.VMID
		*out = new(float64)
		**out = **in
	}
	if in.Vga != nil {
		in, out := &in.Vga, &out.Vga
		*out = make([]VgaInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtiofs != nil {
		in, out := &in.Virtiofs, &out.Virtiofs
		*out = make([]VirtiofsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Watchdog != nil {
		in, out := &in.Watchdog, &out.Watchdog
		*out = make([]WatchdogInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentVMInitParameters.
func (in *EnvironmentVMInitParameters) DeepCopy() *EnvironmentVMInitParameters {
	if in == nil {
		return nil
	}
	out := new(EnvironmentVMInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentVMList) DeepCopyInto(out *EnvironmentVMList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]EnvironmentVM, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentVMList.
func (in *EnvironmentVMList) DeepCopy() *EnvironmentVMList {
	if in == nil {
		return nil
	}
	out := new(EnvironmentVMList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EnvironmentVMList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentVMObservation) DeepCopyInto(out *EnvironmentVMObservation) {
	*out = *in
	if in.Acpi != nil {
		in, out := &in.Acpi, &out.Acpi
		*out = new(bool)
		**out = **in
	}
	if in.Agent != nil {
		in, out := &in.Agent, &out.Agent
		*out = make([]AgentObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AmdSev != nil {
		in, out := &in.AmdSev, &out.AmdSev
		*out = make([]AmdSevObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AudioDevice != nil {
		in, out := &in.AudioDevice, &out.AudioDevice
		*out = make([]AudioDeviceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Bios != nil {
		in, out := &in.Bios, &out.Bios
		*out = new(string)
		**out = **in
	}
	if in.BootOrder != nil {
		in, out := &in.BootOrder, &out.BootOrder
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = make([]CPUObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]CdromObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Clone != nil {
		in, out := &in.Clone, &out.Clone
		*out = make([]CloneObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EfiDisk != nil {
		in, out := &in.EfiDisk, &out.EfiDisk
		*out = make([]EfiDiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HookScriptFileID != nil {
		in, out := &in.HookScriptFileID, &out.HookScriptFileID
		*out = new(string)
		**out = **in
	}
	if in.Hostpci != nil {
		in, out := &in.Hostpci, &out.Hostpci
		*out = make([]HostpciObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPv4Addresses != nil {
		in, out := &in.IPv4Addresses, &out.IPv4Addresses
		*out = make([][]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = make([]*string, len(*in))
				for i := range *in {
					if (*in)[i] != nil {
						in, out := &(*in)[i], &(*out)[i]
						*out = new(string)
						**out = **in
					}
				}
			}
		}
	}
	if in.IPv6Addresses != nil {
		in, out := &in.IPv6Addresses, &out.IPv6Addresses
		*out = make([][]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = make([]*string, len(*in))
				for i := range *in {
					if (*in)[i] != nil {
						in, out := &(*in)[i], &(*out)[i]
						*out = new(string)
						**out = **in
					}
				}
			}
		}
	}
	if in.Initialization != nil {
		in, out := &in.Initialization, &out.Initialization
		*out = make([]InitializationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KeyboardLayout != nil {
		in, out := &in.KeyboardLayout, &out.KeyboardLayout
		*out = new(string)
		**out = **in
	}
	if in.KvmArguments != nil {
		in, out := &in.KvmArguments, &out.KvmArguments
		*out = new(string)
		**out = **in
	}
	if in.MacAddresses != nil {
		in, out := &in.MacAddresses, &out.MacAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Machine != nil {
		in, out := &in.Machine, &out.Machine
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = make([]MemoryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Migrate != nil {
		in, out := &in.Migrate, &out.Migrate
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkDevice != nil {
		in, out := &in.NetworkDevice, &out.NetworkDevice
		*out = make([]NetworkDeviceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkInterfaceNames != nil {
		in, out := &in.NetworkInterfaceNames, &out.NetworkInterfaceNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NodeName != nil {
		in, out := &in.NodeName, &out.NodeName
		*out = new(string)
		**out = **in
	}
	if in.Numa != nil {
		in, out := &in.Numa, &out.Numa
		*out = make([]NumaObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnBoot != nil {
		in, out := &in.OnBoot, &out.OnBoot
		*out = new(bool)
		**out = **in
	}
	if in.OperatingSystem != nil {
		in, out := &in.OperatingSystem, &out.OperatingSystem
		*out = make([]OperatingSystemObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PoolID != nil {
		in, out := &in.PoolID, &out.PoolID
		*out = new(string)
		**out = **in
	}
	if in.Protection != nil {
		in, out := &in.Protection, &out.Protection
		*out = new(bool)
		**out = **in
	}
	if in.Reboot != nil {
		in, out := &in.Reboot, &out.Reboot
		*out = new(bool)
		**out = **in
	}
	if in.RebootAfterUpdate != nil {
		in, out := &in.RebootAfterUpdate, &out.RebootAfterUpdate
		*out = new(bool)
		**out = **in
	}
	if in.Rng != nil {
		in, out := &in.Rng, &out.Rng
		*out = make([]RngObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScsiHardware != nil {
		in, out := &in.ScsiHardware, &out.ScsiHardware
		*out = new(string)
		**out = **in
	}
	if in.SerialDevice != nil {
		in, out := &in.SerialDevice, &out.SerialDevice
		*out = make([]SerialDeviceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Smbios != nil {
		in, out := &in.Smbios, &out.Smbios
		*out = make([]SmbiosObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Started != nil {
		in, out := &in.Started, &out.Started
		*out = new(bool)
		**out = **in
	}
	if in.Startup != nil {
		in, out := &in.Startup, &out.Startup
		*out = make([]StartupObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StopOnDestroy != nil {
		in, out := &in.StopOnDestroy, &out.StopOnDestroy
		*out = new(bool)
		**out = **in
	}
	if in.TabletDevice != nil {
		in, out := &in.TabletDevice, &out.TabletDevice
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Template != nil {
		in, out := &in.Template, &out.Template
		*out = new(bool)
		**out = **in
	}
	if in.TimeoutClone != nil {
		in, out := &in.TimeoutClone, &out.TimeoutClone
		*out = new(float64)
		**out = **in
	}
	if in.TimeoutCreate != nil {
		in, out := &in.TimeoutCreate, &out.TimeoutCreate
		*out = new(float64)
		**out = **in
	}
	if in.TimeoutMigrate != nil {
		in, out := &in.TimeoutMigrate, &out.TimeoutMigrate
		*out = new(float64)
		**out = **in
	}
	if in.TimeoutMoveDisk != nil {
		in, out := &in.TimeoutMoveDisk, &out.TimeoutMoveDisk
		*out = new(float64)
		**out = **in
	}
	if in.TimeoutReboot != nil {
		in, out := &in.TimeoutReboot, &out.TimeoutReboot
		*out = new(float64)
		**out = **in
	}
	if in.TimeoutShutdownVM != nil {
		in, out := &in.TimeoutShutdownVM, &out.TimeoutShutdownVM
		*out = new(float64)
		**out = **in
	}
	if in.TimeoutStartVM != nil {
		in, out := &in.TimeoutStartVM, &out.TimeoutStartVM
		*out = new(float64)
		**out = **in
	}
	if in.TimeoutStopVM != nil {
		in, out := &in.TimeoutStopVM, &out.TimeoutStopVM
		*out = new(float64)
		**out = **in
	}
	if in.TpmState != nil {
		in, out := &in.TpmState, &out.TpmState
		*out = make([]TpmStateObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Usb != nil {
		in, out := &in.Usb, &out.Usb
		*out = make([]UsbObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VMID != nil {
		in, out := &in.VMID, &out.VMID
		*out = new(float64)
		**out = **in
	}
	if in.Vga != nil {
		in, out := &in.Vga, &out.Vga
		*out = make([]VgaObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtiofs != nil {
		in, out := &in.Virtiofs, &out.Virtiofs
		*out = make([]VirtiofsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Watchdog != nil {
		in, out := &in.Watchdog, &out.Watchdog
		*out = make([]WatchdogObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentVMObservation.
func (in *EnvironmentVMObservation) DeepCopy() *EnvironmentVMObservation {
	if in == nil {
		return nil
	}
	out := new(EnvironmentVMObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentVMParameters) DeepCopyInto(out *EnvironmentVMParameters) {
	*out = *in
	if in.Acpi != nil {
		in, out := &in.Acpi, &out.Acpi
		*out = new(bool)
		**out = **in
	}
	if in.Agent != nil {
		in, out := &in.Agent, &out.Agent
		*out = make([]AgentParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AmdSev != nil {
		in, out := &in.AmdSev, &out.AmdSev
		*out = make([]AmdSevParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AudioDevice != nil {
		in, out := &in.AudioDevice, &out.AudioDevice
		*out = make([]AudioDeviceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Bios != nil {
		in, out := &in.Bios, &out.Bios
		*out = new(string)
		**out = **in
	}
	if in.BootOrder != nil {
		in, out := &in.BootOrder, &out.BootOrder
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = make([]CPUParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cdrom != nil {
		in, out := &in.Cdrom, &out.Cdrom
		*out = make([]CdromParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Clone != nil {
		in, out := &in.Clone, &out.Clone
		*out = make([]CloneParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EfiDisk != nil {
		in, out := &in.EfiDisk, &out.EfiDisk
		*out = make([]EfiDiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HookScriptFileID != nil {
		in, out := &in.HookScriptFileID, &out.HookScriptFileID
		*out = new(string)
		**out = **in
	}
	if in.Hostpci != nil {
		in, out := &in.Hostpci, &out.Hostpci
		*out = make([]HostpciParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Initialization != nil {
		in, out := &in.Initialization, &out.Initialization
		*out = make([]InitializationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KeyboardLayout != nil {
		in, out := &in.KeyboardLayout, &out.KeyboardLayout
		*out = new(string)
		**out = **in
	}
	if in.KvmArguments != nil {
		in, out := &in.KvmArguments, &out.KvmArguments
		*out = new(string)
		**out = **in
	}
	if in.MacAddresses != nil {
		in, out := &in.MacAddresses, &out.MacAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Machine != nil {
		in, out := &in.Machine, &out.Machine
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = make([]MemoryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Migrate != nil {
		in, out := &in.Migrate, &out.Migrate
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkDevice != nil {
		in, out := &in.NetworkDevice, &out.NetworkDevice
		*out = make([]NetworkDeviceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeName != nil {
		in, out := &in.NodeName, &out.NodeName
		*out = new(string)
		**out = **in
	}
	if in.Numa != nil {
		in, out := &in.Numa, &out.Numa
		*out = make([]NumaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnBoot != nil {
		in, out := &in.OnBoot, &out.OnBoot
		*out = new(bool)
		**out = **in
	}
	if in.OperatingSystem != nil {
		in, out := &in.OperatingSystem, &out.OperatingSystem
		*out = make([]OperatingSystemParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PoolID != nil {
		in, out := &in.PoolID, &out.PoolID
		*out = new(string)
		**out = **in
	}
	if in.Protection != nil {
		in, out := &in.Protection, &out.Protection
		*out = new(bool)
		**out = **in
	}
	if in.Reboot != nil {
		in, out := &in.Reboot, &out.Reboot
		*out = new(bool)
		**out = **in
	}
	if in.RebootAfterUpdate != nil {
		in, out := &in.RebootAfterUpdate, &out.RebootAfterUpdate
		*out = new(bool)
		**out = **in
	}
	if in.Rng != nil {
		in, out := &in.Rng, &out.Rng
		*out = make([]RngParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScsiHardware != nil {
		in, out := &in.ScsiHardware, &out.ScsiHardware
		*out = new(string)
		**out = **in
	}
	if in.SerialDevice != nil {
		in, out := &in.SerialDevice, &out.SerialDevice
		*out = make([]SerialDeviceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Smbios != nil {
		in, out := &in.Smbios, &out.Smbios
		*out = make([]SmbiosParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Started != nil {
		in, out := &in.Started, &out.Started
		*out = new(bool)
		**out = **in
	}
	if in.Startup != nil {
		in, out := &in.Startup, &out.Startup
		*out = make([]StartupParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StopOnDestroy != nil {
		in, out := &in.StopOnDestroy, &out.StopOnDestroy
		*out = new(bool)
		**out = **in
	}
	if in.TabletDevice != nil {
		in, out := &in.TabletDevice, &out.TabletDevice
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Template != nil {
		in, out := &in.Template, &out.Template
		*out = new(bool)
		**out = **in
	}
	if in.TimeoutClone != nil {
		in, out := &in.TimeoutClone, &out.TimeoutClone
		*out = new(float64)
		**out = **in
	}
	if in.TimeoutCreate != nil {
		in, out := &in.TimeoutCreate, &out.TimeoutCreate
		*out = new(float64)
		**out = **in
	}
	if in.TimeoutMigrate != nil {
		in, out := &in.TimeoutMigrate, &out.TimeoutMigrate
		*out = new(float64)
		**out = **in
	}
	if in.TimeoutMoveDisk != nil {
		in, out := &in.TimeoutMoveDisk, &out.TimeoutMoveDisk
		*out = new(float64)
		**out = **in
	}
	if in.TimeoutReboot != nil {
		in, out := &in.TimeoutReboot, &out.TimeoutReboot
		*out = new(float64)
		**out = **in
	}
	if in.TimeoutShutdownVM != nil {
		in, out := &in.TimeoutShutdownVM, &out.TimeoutShutdownVM
		*out = new(float64)
		**out = **in
	}
	if in.TimeoutStartVM != nil {
		in, out := &in.TimeoutStartVM, &out.TimeoutStartVM
		*out = new(float64)
		**out = **in
	}
	if in.TimeoutStopVM != nil {
		in, out := &in.TimeoutStopVM, &out.TimeoutStopVM
		*out = new(float64)
		**out = **in
	}
	if in.TpmState != nil {
		in, out := &in.TpmState, &out.TpmState
		*out = make([]TpmStateParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Usb != nil {
		in, out := &in.Usb, &out.Usb
		*out = make([]UsbParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VMID != nil {
		in, out := &in.VMID, &out.VMID
		*out = new(float64)
		**out = **in
	}
	if in.Vga != nil {
		in, out := &in.Vga, &out.Vga
		*out = make([]VgaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Virtiofs != nil {
		in, out := &in.Virtiofs, &out.Virtiofs
		*out = make([]VirtiofsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Watchdog != nil {
		in, out := &in.Watchdog, &out.Watchdog
		*out = make([]WatchdogParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentVMParameters.
func (in *EnvironmentVMParameters) DeepCopy() *EnvironmentVMParameters {
	if in == nil {
		return nil
	}
	out := new(EnvironmentVMParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentVMSpec) DeepCopyInto(out *EnvironmentVMSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentVMSpec.
func (in *EnvironmentVMSpec) DeepCopy() *EnvironmentVMSpec {
	if in == nil {
		return nil
	}
	out := new(EnvironmentVMSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentVMStatus) DeepCopyInto(out *EnvironmentVMStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentVMStatus.
func (in *EnvironmentVMStatus) DeepCopy() *EnvironmentVMStatus {
	if in == nil {
		return nil
	}
	out := new(EnvironmentVMStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostpciInitParameters) DeepCopyInto(out *HostpciInitParameters) {
	*out = *in
	if in.Device != nil {
		in, out := &in.Device, &out.Device
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Mapping != nil {
		in, out := &in.Mapping, &out.Mapping
		*out = new(string)
		**out = **in
	}
	if in.Mdev != nil {
		in, out := &in.Mdev, &out.Mdev
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(bool)
		**out = **in
	}
	if in.RomFile != nil {
		in, out := &in.RomFile, &out.RomFile
		*out = new(string)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(bool)
		**out = **in
	}
	if in.Xvga != nil {
		in, out := &in.Xvga, &out.Xvga
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostpciInitParameters.
func (in *HostpciInitParameters) DeepCopy() *HostpciInitParameters {
	if in == nil {
		return nil
	}
	out := new(HostpciInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostpciObservation) DeepCopyInto(out *HostpciObservation) {
	*out = *in
	if in.Device != nil {
		in, out := &in.Device, &out.Device
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Mapping != nil {
		in, out := &in.Mapping, &out.Mapping
		*out = new(string)
		**out = **in
	}
	if in.Mdev != nil {
		in, out := &in.Mdev, &out.Mdev
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(bool)
		**out = **in
	}
	if in.RomFile != nil {
		in, out := &in.RomFile, &out.RomFile
		*out = new(string)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(bool)
		**out = **in
	}
	if in.Xvga != nil {
		in, out := &in.Xvga, &out.Xvga
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostpciObservation.
func (in *HostpciObservation) DeepCopy() *HostpciObservation {
	if in == nil {
		return nil
	}
	out := new(HostpciObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostpciParameters) DeepCopyInto(out *HostpciParameters) {
	*out = *in
	if in.Device != nil {
		in, out := &in.Device, &out.Device
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Mapping != nil {
		in, out := &in.Mapping, &out.Mapping
		*out = new(string)
		**out = **in
	}
	if in.Mdev != nil {
		in, out := &in.Mdev, &out.Mdev
		*out = new(string)
		**out = **in
	}
	if in.Pcie != nil {
		in, out := &in.Pcie, &out.Pcie
		*out = new(bool)
		**out = **in
	}
	if in.RomFile != nil {
		in, out := &in.RomFile, &out.RomFile
		*out = new(string)
		**out = **in
	}
	if in.Rombar != nil {
		in, out := &in.Rombar, &out.Rombar
		*out = new(bool)
		**out = **in
	}
	if in.Xvga != nil {
		in, out := &in.Xvga, &out.Xvga
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostpciParameters.
func (in *HostpciParameters) DeepCopy() *HostpciParameters {
	if in == nil {
		return nil
	}
	out := new(HostpciParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPConfigInitParameters) DeepCopyInto(out *IPConfigInitParameters) {
	*out = *in
	if in.IPv4 != nil {
		in, out := &in.IPv4, &out.IPv4
		*out = make([]IPv4InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPv6 != nil {
		in, out := &in.IPv6, &out.IPv6
		*out = make([]IPv6InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPConfigInitParameters.
func (in *IPConfigInitParameters) DeepCopy() *IPConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(IPConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPConfigObservation) DeepCopyInto(out *IPConfigObservation) {
	*out = *in
	if in.IPv4 != nil {
		in, out := &in.IPv4, &out.IPv4
		*out = make([]IPv4Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPv6 != nil {
		in, out := &in.IPv6, &out.IPv6
		*out = make([]IPv6Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPConfigObservation.
func (in *IPConfigObservation) DeepCopy() *IPConfigObservation {
	if in == nil {
		return nil
	}
	out := new(IPConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPConfigParameters) DeepCopyInto(out *IPConfigParameters) {
	*out = *in
	if in.IPv4 != nil {
		in, out := &in.IPv4, &out.IPv4
		*out = make([]IPv4Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPv6 != nil {
		in, out := &in.IPv6, &out.IPv6
		*out = make([]IPv6Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPConfigParameters.
func (in *IPConfigParameters) DeepCopy() *IPConfigParameters {
	if in == nil {
		return nil
	}
	out := new(IPConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPv4InitParameters) DeepCopyInto(out *IPv4InitParameters) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.Gateway != nil {
		in, out := &in.Gateway, &out.Gateway
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPv4InitParameters.
func (in *IPv4InitParameters) DeepCopy() *IPv4InitParameters {
	if in == nil {
		return nil
	}
	out := new(IPv4InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPv4Observation) DeepCopyInto(out *IPv4Observation) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.Gateway != nil {
		in, out := &in.Gateway, &out.Gateway
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPv4Observation.
func (in *IPv4Observation) DeepCopy() *IPv4Observation {
	if in == nil {
		return nil
	}
	out := new(IPv4Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPv4Parameters) DeepCopyInto(out *IPv4Parameters) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.Gateway != nil {
		in, out := &in.Gateway, &out.Gateway
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPv4Parameters.
func (in *IPv4Parameters) DeepCopy() *IPv4Parameters {
	if in == nil {
		return nil
	}
	out := new(IPv4Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPv6InitParameters) DeepCopyInto(out *IPv6InitParameters) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.Gateway != nil {
		in, out := &in.Gateway, &out.Gateway
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPv6InitParameters.
func (in *IPv6InitParameters) DeepCopy() *IPv6InitParameters {
	if in == nil {
		return nil
	}
	out := new(IPv6InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPv6Observation) DeepCopyInto(out *IPv6Observation) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.Gateway != nil {
		in, out := &in.Gateway, &out.Gateway
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPv6Observation.
func (in *IPv6Observation) DeepCopy() *IPv6Observation {
	if in == nil {
		return nil
	}
	out := new(IPv6Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPv6Parameters) DeepCopyInto(out *IPv6Parameters) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.Gateway != nil {
		in, out := &in.Gateway, &out.Gateway
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPv6Parameters.
func (in *IPv6Parameters) DeepCopy() *IPv6Parameters {
	if in == nil {
		return nil
	}
	out := new(IPv6Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitializationInitParameters) DeepCopyInto(out *InitializationInitParameters) {
	*out = *in
	if in.DNS != nil {
		in, out := &in.DNS, &out.DNS
		*out = make([]DNSInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DatastoreID != nil {
		in, out := &in.DatastoreID, &out.DatastoreID
		*out = new(string)
		**out = **in
	}
	if in.IPConfig != nil {
		in, out := &in.IPConfig, &out.IPConfig
		*out = make([]IPConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Interface != nil {
		in, out := &in.Interface, &out.Interface
		*out = new(string)
		**out = **in
	}
	if in.MetaDataFileID != nil {
		in, out := &in.MetaDataFileID, &out.MetaDataFileID
		*out = new(string)
		**out = **in
	}
	if in.NetworkDataFileID != nil {
		in, out := &in.NetworkDataFileID, &out.NetworkDataFileID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UserAccount != nil {
		in, out := &in.UserAccount, &out.UserAccount
		*out = make([]UserAccountInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UserDataFileID != nil {
		in, out := &in.UserDataFileID, &out.UserDataFileID
		*out = new(string)
		**out = **in
	}
	if in.VendorDataFileID != nil {
		in, out := &in.VendorDataFileID, &out.VendorDataFileID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitializationInitParameters.
func (in *InitializationInitParameters) DeepCopy() *InitializationInitParameters {
	if in == nil {
		return nil
	}
	out := new(InitializationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitializationObservation) DeepCopyInto(out *InitializationObservation) {
	*out = *in
	if in.DNS != nil {
		in, out := &in.DNS, &out.DNS
		*out = make([]DNSObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DatastoreID != nil {
		in, out := &in.DatastoreID, &out.DatastoreID
		*out = new(string)
		**out = **in
	}
	if in.IPConfig != nil {
		in, out := &in.IPConfig, &out.IPConfig
		*out = make([]IPConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Interface != nil {
		in, out := &in.Interface, &out.Interface
		*out = new(string)
		**out = **in
	}
	if in.MetaDataFileID != nil {
		in, out := &in.MetaDataFileID, &out.MetaDataFileID
		*out = new(string)
		**out = **in
	}
	if in.NetworkDataFileID != nil {
		in, out := &in.NetworkDataFileID, &out.NetworkDataFileID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UserAccount != nil {
		in, out := &in.UserAccount, &out.UserAccount
		*out = make([]UserAccountObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UserDataFileID != nil {
		in, out := &in.UserDataFileID, &out.UserDataFileID
		*out = new(string)
		**out = **in
	}
	if in.VendorDataFileID != nil {
		in, out := &in.VendorDataFileID, &out.VendorDataFileID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitializationObservation.
func (in *InitializationObservation) DeepCopy() *InitializationObservation {
	if in == nil {
		return nil
	}
	out := new(InitializationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitializationParameters) DeepCopyInto(out *InitializationParameters) {
	*out = *in
	if in.DNS != nil {
		in, out := &in.DNS, &out.DNS
		*out = make([]DNSParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DatastoreID != nil {
		in, out := &in.DatastoreID, &out.DatastoreID
		*out = new(string)
		**out = **in
	}
	if in.IPConfig != nil {
		in, out := &in.IPConfig, &out.IPConfig
		*out = make([]IPConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Interface != nil {
		in, out := &in.Interface, &out.Interface
		*out = new(string)
		**out = **in
	}
	if in.MetaDataFileID != nil {
		in, out := &in.MetaDataFileID, &out.MetaDataFileID
		*out = new(string)
		**out = **in
	}
	if in.NetworkDataFileID != nil {
		in, out := &in.NetworkDataFileID, &out.NetworkDataFileID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UserAccount != nil {
		in, out := &in.UserAccount, &out.UserAccount
		*out = make([]UserAccountParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UserDataFileID != nil {
		in, out := &in.UserDataFileID, &out.UserDataFileID
		*out = new(string)
		**out = **in
	}
	if in.VendorDataFileID != nil {
		in, out := &in.VendorDataFileID, &out.VendorDataFileID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitializationParameters.
func (in *InitializationParameters) DeepCopy() *InitializationParameters {
	if in == nil {
		return nil
	}
	out := new(InitializationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemoryInitParameters) DeepCopyInto(out *MemoryInitParameters) {
	*out = *in
	if in.Dedicated != nil {
		in, out := &in.Dedicated, &out.Dedicated
		*out = new(float64)
		**out = **in
	}
	if in.Floating != nil {
		in, out := &in.Floating, &out.Floating
		*out = new(float64)
		**out = **in
	}
	if in.Hugepages != nil {
		in, out := &in.Hugepages, &out.Hugepages
		*out = new(string)
		**out = **in
	}
	if in.KeepHugepages != nil {
		in, out := &in.KeepHugepages, &out.KeepHugepages
		*out = new(bool)
		**out = **in
	}
	if in.Shared != nil {
		in, out := &in.Shared, &out.Shared
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemoryInitParameters.
func (in *MemoryInitParameters) DeepCopy() *MemoryInitParameters {
	if in == nil {
		return nil
	}
	out := new(MemoryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemoryObservation) DeepCopyInto(out *MemoryObservation) {
	*out = *in
	if in.Dedicated != nil {
		in, out := &in.Dedicated, &out.Dedicated
		*out = new(float64)
		**out = **in
	}
	if in.Floating != nil {
		in, out := &in.Floating, &out.Floating
		*out = new(float64)
		**out = **in
	}
	if in.Hugepages != nil {
		in, out := &in.Hugepages, &out.Hugepages
		*out = new(string)
		**out = **in
	}
	if in.KeepHugepages != nil {
		in, out := &in.KeepHugepages, &out.KeepHugepages
		*out = new(bool)
		**out = **in
	}
	if in.Shared != nil {
		in, out := &in.Shared, &out.Shared
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemoryObservation.
func (in *MemoryObservation) DeepCopy() *MemoryObservation {
	if in == nil {
		return nil
	}
	out := new(MemoryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MemoryParameters) DeepCopyInto(out *MemoryParameters) {
	*out = *in
	if in.Dedicated != nil {
		in, out := &in.Dedicated, &out.Dedicated
		*out = new(float64)
		**out = **in
	}
	if in.Floating != nil {
		in, out := &in.Floating, &out.Floating
		*out = new(float64)
		**out = **in
	}
	if in.Hugepages != nil {
		in, out := &in.Hugepages, &out.Hugepages
		*out = new(string)
		**out = **in
	}
	if in.KeepHugepages != nil {
		in, out := &in.KeepHugepages, &out.KeepHugepages
		*out = new(bool)
		**out = **in
	}
	if in.Shared != nil {
		in, out := &in.Shared, &out.Shared
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MemoryParameters.
func (in *MemoryParameters) DeepCopy() *MemoryParameters {
	if in == nil {
		return nil
	}
	out := new(MemoryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkDeviceInitParameters) DeepCopyInto(out *NetworkDeviceInitParameters) {
	*out = *in
	if in.Bridge != nil {
		in, out := &in.Bridge, &out.Bridge
		*out = new(string)
		**out = **in
	}
	if in.Disconnected != nil {
		in, out := &in.Disconnected, &out.Disconnected
		*out = new(bool)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Firewall != nil {
		in, out := &in.Firewall, &out.Firewall
		*out = new(bool)
		**out = **in
	}
	if in.MacAddress != nil {
		in, out := &in.MacAddress, &out.MacAddress
		*out = new(string)
		**out = **in
	}
	if in.Model != nil {
		in, out := &in.Model, &out.Model
		*out = new(string)
		**out = **in
	}
	if in.Mtu != nil {
		in, out := &in.Mtu, &out.Mtu
		*out = new(float64)
		**out = **in
	}
	if in.Queues != nil {
		in, out := &in.Queues, &out.Queues
		*out = new(float64)
		**out = **in
	}
	if in.RateLimit != nil {
		in, out := &in.RateLimit, &out.RateLimit
		*out = new(float64)
		**out = **in
	}
	if in.Trunks != nil {
		in, out := &in.Trunks, &out.Trunks
		*out = new(string)
		**out = **in
	}
	if in.VlanID != nil {
		in, out := &in.VlanID, &out.VlanID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkDeviceInitParameters.
func (in *NetworkDeviceInitParameters) DeepCopy() *NetworkDeviceInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkDeviceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkDeviceObservation) DeepCopyInto(out *NetworkDeviceObservation) {
	*out = *in
	if in.Bridge != nil {
		in, out := &in.Bridge, &out.Bridge
		*out = new(string)
		**out = **in
	}
	if in.Disconnected != nil {
		in, out := &in.Disconnected, &out.Disconnected
		*out = new(bool)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Firewall != nil {
		in, out := &in.Firewall, &out.Firewall
		*out = new(bool)
		**out = **in
	}
	if in.MacAddress != nil {
		in, out := &in.MacAddress, &out.MacAddress
		*out = new(string)
		**out = **in
	}
	if in.Model != nil {
		in, out := &in.Model, &out.Model
		*out = new(string)
		**out = **in
	}
	if in.Mtu != nil {
		in, out := &in.Mtu, &out.Mtu
		*out = new(float64)
		**out = **in
	}
	if in.Queues != nil {
		in, out := &in.Queues, &out.Queues
		*out = new(float64)
		**out = **in
	}
	if in.RateLimit != nil {
		in, out := &in.RateLimit, &out.RateLimit
		*out = new(float64)
		**out = **in
	}
	if in.Trunks != nil {
		in, out := &in.Trunks, &out.Trunks
		*out = new(string)
		**out = **in
	}
	if in.VlanID != nil {
		in, out := &in.VlanID, &out.VlanID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkDeviceObservation.
func (in *NetworkDeviceObservation) DeepCopy() *NetworkDeviceObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkDeviceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkDeviceParameters) DeepCopyInto(out *NetworkDeviceParameters) {
	*out = *in
	if in.Bridge != nil {
		in, out := &in.Bridge, &out.Bridge
		*out = new(string)
		**out = **in
	}
	if in.Disconnected != nil {
		in, out := &in.Disconnected, &out.Disconnected
		*out = new(bool)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Firewall != nil {
		in, out := &in.Firewall, &out.Firewall
		*out = new(bool)
		**out = **in
	}
	if in.MacAddress != nil {
		in, out := &in.MacAddress, &out.MacAddress
		*out = new(string)
		**out = **in
	}
	if in.Model != nil {
		in, out := &in.Model, &out.Model
		*out = new(string)
		**out = **in
	}
	if in.Mtu != nil {
		in, out := &in.Mtu, &out.Mtu
		*out = new(float64)
		**out = **in
	}
	if in.Queues != nil {
		in, out := &in.Queues, &out.Queues
		*out = new(float64)
		**out = **in
	}
	if in.RateLimit != nil {
		in, out := &in.RateLimit, &out.RateLimit
		*out = new(float64)
		**out = **in
	}
	if in.Trunks != nil {
		in, out := &in.Trunks, &out.Trunks
		*out = new(string)
		**out = **in
	}
	if in.VlanID != nil {
		in, out := &in.VlanID, &out.VlanID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkDeviceParameters.
func (in *NetworkDeviceParameters) DeepCopy() *NetworkDeviceParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkDeviceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NumaInitParameters) DeepCopyInto(out *NumaInitParameters) {
	*out = *in
	if in.Cpus != nil {
		in, out := &in.Cpus, &out.Cpus
		*out = new(string)
		**out = **in
	}
	if in.Device != nil {
		in, out := &in.Device, &out.Device
		*out = new(string)
		**out = **in
	}
	if in.Hostnodes != nil {
		in, out := &in.Hostnodes, &out.Hostnodes
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(float64)
		**out = **in
	}
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NumaInitParameters.
func (in *NumaInitParameters) DeepCopy() *NumaInitParameters {
	if in == nil {
		return nil
	}
	out := new(NumaInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NumaObservation) DeepCopyInto(out *NumaObservation) {
	*out = *in
	if in.Cpus != nil {
		in, out := &in.Cpus, &out.Cpus
		*out = new(string)
		**out = **in
	}
	if in.Device != nil {
		in, out := &in.Device, &out.Device
		*out = new(string)
		**out = **in
	}
	if in.Hostnodes != nil {
		in, out := &in.Hostnodes, &out.Hostnodes
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(float64)
		**out = **in
	}
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NumaObservation.
func (in *NumaObservation) DeepCopy() *NumaObservation {
	if in == nil {
		return nil
	}
	out := new(NumaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NumaParameters) DeepCopyInto(out *NumaParameters) {
	*out = *in
	if in.Cpus != nil {
		in, out := &in.Cpus, &out.Cpus
		*out = new(string)
		**out = **in
	}
	if in.Device != nil {
		in, out := &in.Device, &out.Device
		*out = new(string)
		**out = **in
	}
	if in.Hostnodes != nil {
		in, out := &in.Hostnodes, &out.Hostnodes
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(float64)
		**out = **in
	}
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NumaParameters.
func (in *NumaParameters) DeepCopy() *NumaParameters {
	if in == nil {
		return nil
	}
	out := new(NumaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OperatingSystemInitParameters) DeepCopyInto(out *OperatingSystemInitParameters) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OperatingSystemInitParameters.
func (in *OperatingSystemInitParameters) DeepCopy() *OperatingSystemInitParameters {
	if in == nil {
		return nil
	}
	out := new(OperatingSystemInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OperatingSystemObservation) DeepCopyInto(out *OperatingSystemObservation) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OperatingSystemObservation.
func (in *OperatingSystemObservation) DeepCopy() *OperatingSystemObservation {
	if in == nil {
		return nil
	}
	out := new(OperatingSystemObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OperatingSystemParameters) DeepCopyInto(out *OperatingSystemParameters) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OperatingSystemParameters.
func (in *OperatingSystemParameters) DeepCopy() *OperatingSystemParameters {
	if in == nil {
		return nil
	}
	out := new(OperatingSystemParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RngInitParameters) DeepCopyInto(out *RngInitParameters) {
	*out = *in
	if in.MaxBytes != nil {
		in, out := &in.MaxBytes, &out.MaxBytes
		*out = new(float64)
		**out = **in
	}
	if in.Period != nil {
		in, out := &in.Period, &out.Period
		*out = new(float64)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RngInitParameters.
func (in *RngInitParameters) DeepCopy() *RngInitParameters {
	if in == nil {
		return nil
	}
	out := new(RngInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RngObservation) DeepCopyInto(out *RngObservation) {
	*out = *in
	if in.MaxBytes != nil {
		in, out := &in.MaxBytes, &out.MaxBytes
		*out = new(float64)
		**out = **in
	}
	if in.Period != nil {
		in, out := &in.Period, &out.Period
		*out = new(float64)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RngObservation.
func (in *RngObservation) DeepCopy() *RngObservation {
	if in == nil {
		return nil
	}
	out := new(RngObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RngParameters) DeepCopyInto(out *RngParameters) {
	*out = *in
	if in.MaxBytes != nil {
		in, out := &in.MaxBytes, &out.MaxBytes
		*out = new(float64)
		**out = **in
	}
	if in.Period != nil {
		in, out := &in.Period, &out.Period
		*out = new(float64)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RngParameters.
func (in *RngParameters) DeepCopy() *RngParameters {
	if in == nil {
		return nil
	}
	out := new(RngParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SerialDeviceInitParameters) DeepCopyInto(out *SerialDeviceInitParameters) {
	*out = *in
	if in.Device != nil {
		in, out := &in.Device, &out.Device
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SerialDeviceInitParameters.
func (in *SerialDeviceInitParameters) DeepCopy() *SerialDeviceInitParameters {
	if in == nil {
		return nil
	}
	out := new(SerialDeviceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SerialDeviceObservation) DeepCopyInto(out *SerialDeviceObservation) {
	*out = *in
	if in.Device != nil {
		in, out := &in.Device, &out.Device
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SerialDeviceObservation.
func (in *SerialDeviceObservation) DeepCopy() *SerialDeviceObservation {
	if in == nil {
		return nil
	}
	out := new(SerialDeviceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SerialDeviceParameters) DeepCopyInto(out *SerialDeviceParameters) {
	*out = *in
	if in.Device != nil {
		in, out := &in.Device, &out.Device
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SerialDeviceParameters.
func (in *SerialDeviceParameters) DeepCopy() *SerialDeviceParameters {
	if in == nil {
		return nil
	}
	out := new(SerialDeviceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SmbiosInitParameters) DeepCopyInto(out *SmbiosInitParameters) {
	*out = *in
	if in.Family != nil {
		in, out := &in.Family, &out.Family
		*out = new(string)
		**out = **in
	}
	if in.Manufacturer != nil {
		in, out := &in.Manufacturer, &out.Manufacturer
		*out = new(string)
		**out = **in
	}
	if in.Product != nil {
		in, out := &in.Product, &out.Product
		*out = new(string)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = new(string)
		**out = **in
	}
	if in.UUID != nil {
		in, out := &in.UUID, &out.UUID
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SmbiosInitParameters.
func (in *SmbiosInitParameters) DeepCopy() *SmbiosInitParameters {
	if in == nil {
		return nil
	}
	out := new(SmbiosInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SmbiosObservation) DeepCopyInto(out *SmbiosObservation) {
	*out = *in
	if in.Family != nil {
		in, out := &in.Family, &out.Family
		*out = new(string)
		**out = **in
	}
	if in.Manufacturer != nil {
		in, out := &in.Manufacturer, &out.Manufacturer
		*out = new(string)
		**out = **in
	}
	if in.Product != nil {
		in, out := &in.Product, &out.Product
		*out = new(string)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = new(string)
		**out = **in
	}
	if in.UUID != nil {
		in, out := &in.UUID, &out.UUID
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SmbiosObservation.
func (in *SmbiosObservation) DeepCopy() *SmbiosObservation {
	if in == nil {
		return nil
	}
	out := new(SmbiosObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SmbiosParameters) DeepCopyInto(out *SmbiosParameters) {
	*out = *in
	if in.Family != nil {
		in, out := &in.Family, &out.Family
		*out = new(string)
		**out = **in
	}
	if in.Manufacturer != nil {
		in, out := &in.Manufacturer, &out.Manufacturer
		*out = new(string)
		**out = **in
	}
	if in.Product != nil {
		in, out := &in.Product, &out.Product
		*out = new(string)
		**out = **in
	}
	if in.Serial != nil {
		in, out := &in.Serial, &out.Serial
		*out = new(string)
		**out = **in
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = new(string)
		**out = **in
	}
	if in.UUID != nil {
		in, out := &in.UUID, &out.UUID
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SmbiosParameters.
func (in *SmbiosParameters) DeepCopy() *SmbiosParameters {
	if in == nil {
		return nil
	}
	out := new(SmbiosParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpeedInitParameters) DeepCopyInto(out *SpeedInitParameters) {
	*out = *in
	if in.IopsRead != nil {
		in, out := &in.IopsRead, &out.IopsRead
		*out = new(float64)
		**out = **in
	}
	if in.IopsReadBurstable != nil {
		in, out := &in.IopsReadBurstable, &out.IopsReadBurstable
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrite != nil {
		in, out := &in.IopsWrite, &out.IopsWrite
		*out = new(float64)
		**out = **in
	}
	if in.IopsWriteBurstable != nil {
		in, out := &in.IopsWriteBurstable, &out.IopsWriteBurstable
		*out = new(float64)
		**out = **in
	}
	if in.Read != nil {
		in, out := &in.Read, &out.Read
		*out = new(float64)
		**out = **in
	}
	if in.ReadBurstable != nil {
		in, out := &in.ReadBurstable, &out.ReadBurstable
		*out = new(float64)
		**out = **in
	}
	if in.Write != nil {
		in, out := &in.Write, &out.Write
		*out = new(float64)
		**out = **in
	}
	if in.WriteBurstable != nil {
		in, out := &in.WriteBurstable, &out.WriteBurstable
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpeedInitParameters.
func (in *SpeedInitParameters) DeepCopy() *SpeedInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpeedInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpeedObservation) DeepCopyInto(out *SpeedObservation) {
	*out = *in
	if in.IopsRead != nil {
		in, out := &in.IopsRead, &out.IopsRead
		*out = new(float64)
		**out = **in
	}
	if in.IopsReadBurstable != nil {
		in, out := &in.IopsReadBurstable, &out.IopsReadBurstable
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrite != nil {
		in, out := &in.IopsWrite, &out.IopsWrite
		*out = new(float64)
		**out = **in
	}
	if in.IopsWriteBurstable != nil {
		in, out := &in.IopsWriteBurstable, &out.IopsWriteBurstable
		*out = new(float64)
		**out = **in
	}
	if in.Read != nil {
		in, out := &in.Read, &out.Read
		*out = new(float64)
		**out = **in
	}
	if in.ReadBurstable != nil {
		in, out := &in.ReadBurstable, &out.ReadBurstable
		*out = new(float64)
		**out = **in
	}
	if in.Write != nil {
		in, out := &in.Write, &out.Write
		*out = new(float64)
		**out = **in
	}
	if in.WriteBurstable != nil {
		in, out := &in.WriteBurstable, &out.WriteBurstable
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpeedObservation.
func (in *SpeedObservation) DeepCopy() *SpeedObservation {
	if in == nil {
		return nil
	}
	out := new(SpeedObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpeedParameters) DeepCopyInto(out *SpeedParameters) {
	*out = *in
	if in.IopsRead != nil {
		in, out := &in.IopsRead, &out.IopsRead
		*out = new(float64)
		**out = **in
	}
	if in.IopsReadBurstable != nil {
		in, out := &in.IopsReadBurstable, &out.IopsReadBurstable
		*out = new(float64)
		**out = **in
	}
	if in.IopsWrite != nil {
		in, out := &in.IopsWrite, &out.IopsWrite
		*out = new(float64)
		**out = **in
	}
	if in.IopsWriteBurstable != nil {
		in, out := &in.IopsWriteBurstable, &out.IopsWriteBurstable
		*out = new(float64)
		**out = **in
	}
	if in.Read != nil {
		in, out := &in.Read, &out.Read
		*out = new(float64)
		**out = **in
	}
	if in.ReadBurstable != nil {
		in, out := &in.ReadBurstable, &out.ReadBurstable
		*out = new(float64)
		**out = **in
	}
	if in.Write != nil {
		in, out := &in.Write, &out.Write
		*out = new(float64)
		**out = **in
	}
	if in.WriteBurstable != nil {
		in, out := &in.WriteBurstable, &out.WriteBurstable
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpeedParameters.
func (in *SpeedParameters) DeepCopy() *SpeedParameters {
	if in == nil {
		return nil
	}
	out := new(SpeedParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StartupInitParameters) DeepCopyInto(out *StartupInitParameters) {
	*out = *in
	if in.DownDelay != nil {
		in, out := &in.DownDelay, &out.DownDelay
		*out = new(float64)
		**out = **in
	}
	if in.Order != nil {
		in, out := &in.Order, &out.Order
		*out = new(float64)
		**out = **in
	}
	if in.UpDelay != nil {
		in, out := &in.UpDelay, &out.UpDelay
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StartupInitParameters.
func (in *StartupInitParameters) DeepCopy() *StartupInitParameters {
	if in == nil {
		return nil
	}
	out := new(StartupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StartupObservation) DeepCopyInto(out *StartupObservation) {
	*out = *in
	if in.DownDelay != nil {
		in, out := &in.DownDelay, &out.DownDelay
		*out = new(float64)
		**out = **in
	}
	if in.Order != nil {
		in, out := &in.Order, &out.Order
		*out = new(float64)
		**out = **in
	}
	if in.UpDelay != nil {
		in, out := &in.UpDelay, &out.UpDelay
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StartupObservation.
func (in *StartupObservation) DeepCopy() *StartupObservation {
	if in == nil {
		return nil
	}
	out := new(StartupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StartupParameters) DeepCopyInto(out *StartupParameters) {
	*out = *in
	if in.DownDelay != nil {
		in, out := &in.DownDelay, &out.DownDelay
		*out = new(float64)
		**out = **in
	}
	if in.Order != nil {
		in, out := &in.Order, &out.Order
		*out = new(float64)
		**out = **in
	}
	if in.UpDelay != nil {
		in, out := &in.UpDelay, &out.UpDelay
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StartupParameters.
func (in *StartupParameters) DeepCopy() *StartupParameters {
	if in == nil {
		return nil
	}
	out := new(StartupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TpmStateInitParameters) DeepCopyInto(out *TpmStateInitParameters) {
	*out = *in
	if in.DatastoreID != nil {
		in, out := &in.DatastoreID, &out.DatastoreID
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TpmStateInitParameters.
func (in *TpmStateInitParameters) DeepCopy() *TpmStateInitParameters {
	if in == nil {
		return nil
	}
	out := new(TpmStateInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TpmStateObservation) DeepCopyInto(out *TpmStateObservation) {
	*out = *in
	if in.DatastoreID != nil {
		in, out := &in.DatastoreID, &out.DatastoreID
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TpmStateObservation.
func (in *TpmStateObservation) DeepCopy() *TpmStateObservation {
	if in == nil {
		return nil
	}
	out := new(TpmStateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TpmStateParameters) DeepCopyInto(out *TpmStateParameters) {
	*out = *in
	if in.DatastoreID != nil {
		in, out := &in.DatastoreID, &out.DatastoreID
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TpmStateParameters.
func (in *TpmStateParameters) DeepCopy() *TpmStateParameters {
	if in == nil {
		return nil
	}
	out := new(TpmStateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UsbInitParameters) DeepCopyInto(out *UsbInitParameters) {
	*out = *in
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Mapping != nil {
		in, out := &in.Mapping, &out.Mapping
		*out = new(string)
		**out = **in
	}
	if in.Usb3 != nil {
		in, out := &in.Usb3, &out.Usb3
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UsbInitParameters.
func (in *UsbInitParameters) DeepCopy() *UsbInitParameters {
	if in == nil {
		return nil
	}
	out := new(UsbInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UsbObservation) DeepCopyInto(out *UsbObservation) {
	*out = *in
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Mapping != nil {
		in, out := &in.Mapping, &out.Mapping
		*out = new(string)
		**out = **in
	}
	if in.Usb3 != nil {
		in, out := &in.Usb3, &out.Usb3
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UsbObservation.
func (in *UsbObservation) DeepCopy() *UsbObservation {
	if in == nil {
		return nil
	}
	out := new(UsbObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UsbParameters) DeepCopyInto(out *UsbParameters) {
	*out = *in
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Mapping != nil {
		in, out := &in.Mapping, &out.Mapping
		*out = new(string)
		**out = **in
	}
	if in.Usb3 != nil {
		in, out := &in.Usb3, &out.Usb3
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UsbParameters.
func (in *UsbParameters) DeepCopy() *UsbParameters {
	if in == nil {
		return nil
	}
	out := new(UsbParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserAccountInitParameters) DeepCopyInto(out *UserAccountInitParameters) {
	*out = *in
	if in.Keys != nil {
		in, out := &in.Keys, &out.Keys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserAccountInitParameters.
func (in *UserAccountInitParameters) DeepCopy() *UserAccountInitParameters {
	if in == nil {
		return nil
	}
	out := new(UserAccountInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserAccountObservation) DeepCopyInto(out *UserAccountObservation) {
	*out = *in
	if in.Keys != nil {
		in, out := &in.Keys, &out.Keys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserAccountObservation.
func (in *UserAccountObservation) DeepCopy() *UserAccountObservation {
	if in == nil {
		return nil
	}
	out := new(UserAccountObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserAccountParameters) DeepCopyInto(out *UserAccountParameters) {
	*out = *in
	if in.Keys != nil {
		in, out := &in.Keys, &out.Keys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserAccountParameters.
func (in *UserAccountParameters) DeepCopy() *UserAccountParameters {
	if in == nil {
		return nil
	}
	out := new(UserAccountParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VgaInitParameters) DeepCopyInto(out *VgaInitParameters) {
	*out = *in
	if in.Clipboard != nil {
		in, out := &in.Clipboard, &out.Clipboard
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VgaInitParameters.
func (in *VgaInitParameters) DeepCopy() *VgaInitParameters {
	if in == nil {
		return nil
	}
	out := new(VgaInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VgaObservation) DeepCopyInto(out *VgaObservation) {
	*out = *in
	if in.Clipboard != nil {
		in, out := &in.Clipboard, &out.Clipboard
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VgaObservation.
func (in *VgaObservation) DeepCopy() *VgaObservation {
	if in == nil {
		return nil
	}
	out := new(VgaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VgaParameters) DeepCopyInto(out *VgaParameters) {
	*out = *in
	if in.Clipboard != nil {
		in, out := &in.Clipboard, &out.Clipboard
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VgaParameters.
func (in *VgaParameters) DeepCopy() *VgaParameters {
	if in == nil {
		return nil
	}
	out := new(VgaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtiofsInitParameters) DeepCopyInto(out *VirtiofsInitParameters) {
	*out = *in
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.DirectIo != nil {
		in, out := &in.DirectIo, &out.DirectIo
		*out = new(bool)
		**out = **in
	}
	if in.ExposeACL != nil {
		in, out := &in.ExposeACL, &out.ExposeACL
		*out = new(bool)
		**out = **in
	}
	if in.ExposeXattr != nil {
		in, out := &in.ExposeXattr, &out.ExposeXattr
		*out = new(bool)
		**out = **in
	}
	if in.Mapping != nil {
		in, out := &in.Mapping, &out.Mapping
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtiofsInitParameters.
func (in *VirtiofsInitParameters) DeepCopy() *VirtiofsInitParameters {
	if in == nil {
		return nil
	}
	out := new(VirtiofsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtiofsObservation) DeepCopyInto(out *VirtiofsObservation) {
	*out = *in
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.DirectIo != nil {
		in, out := &in.DirectIo, &out.DirectIo
		*out = new(bool)
		**out = **in
	}
	if in.ExposeACL != nil {
		in, out := &in.ExposeACL, &out.ExposeACL
		*out = new(bool)
		**out = **in
	}
	if in.ExposeXattr != nil {
		in, out := &in.ExposeXattr, &out.ExposeXattr
		*out = new(bool)
		**out = **in
	}
	if in.Mapping != nil {
		in, out := &in.Mapping, &out.Mapping
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtiofsObservation.
func (in *VirtiofsObservation) DeepCopy() *VirtiofsObservation {
	if in == nil {
		return nil
	}
	out := new(VirtiofsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtiofsParameters) DeepCopyInto(out *VirtiofsParameters) {
	*out = *in
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(string)
		**out = **in
	}
	if in.DirectIo != nil {
		in, out := &in.DirectIo, &out.DirectIo
		*out = new(bool)
		**out = **in
	}
	if in.ExposeACL != nil {
		in, out := &in.ExposeACL, &out.ExposeACL
		*out = new(bool)
		**out = **in
	}
	if in.ExposeXattr != nil {
		in, out := &in.ExposeXattr, &out.ExposeXattr
		*out = new(bool)
		**out = **in
	}
	if in.Mapping != nil {
		in, out := &in.Mapping, &out.Mapping
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtiofsParameters.
func (in *VirtiofsParameters) DeepCopy() *VirtiofsParameters {
	if in == nil {
		return nil
	}
	out := new(VirtiofsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WatchdogInitParameters) DeepCopyInto(out *WatchdogInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Model != nil {
		in, out := &in.Model, &out.Model
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WatchdogInitParameters.
func (in *WatchdogInitParameters) DeepCopy() *WatchdogInitParameters {
	if in == nil {
		return nil
	}
	out := new(WatchdogInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WatchdogObservation) DeepCopyInto(out *WatchdogObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Model != nil {
		in, out := &in.Model, &out.Model
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WatchdogObservation.
func (in *WatchdogObservation) DeepCopy() *WatchdogObservation {
	if in == nil {
		return nil
	}
	out := new(WatchdogObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WatchdogParameters) DeepCopyInto(out *WatchdogParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Model != nil {
		in, out := &in.Model, &out.Model
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WatchdogParameters.
func (in *WatchdogParameters) DeepCopy() *WatchdogParameters {
	if in == nil {
		return nil
	}
	out := new(WatchdogParameters)
	in.DeepCopyInto(out)
	return out
}
