// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type EnvironmentHaresourceInitParameters struct {

	// (String) The comment associated with this resource.
	// The comment associated with this resource.
	Comment *string `json:"comment,omitempty" tf:"comment,omitempty"`

	// (String) The identifier of the High Availability group this resource is a member of.
	// The identifier of the High Availability group this resource is a member of.
	Group *string `json:"group,omitempty" tf:"group,omitempty"`

	// (Number) The maximal number of relocation attempts.
	// The maximal number of relocation attempts.
	MaxRelocate *float64 `json:"maxRelocate,omitempty" tf:"max_relocate,omitempty"`

	// (Number) The maximal number of restart attempts.
	// The maximal number of restart attempts.
	MaxRestart *float64 `json:"maxRestart,omitempty" tf:"max_restart,omitempty"`

	// (String) The Proxmox HA resource identifier
	// The Proxmox HA resource identifier
	ResourceID *string `json:"resourceId,omitempty" tf:"resource_id,omitempty"`

	// (String) The desired state of the resource.
	// The desired state of the resource.
	State *string `json:"state,omitempty" tf:"state,omitempty"`

	// (String) The type of HA resources to create. If unset, it will be deduced from the resource_id.
	// The type of HA resources to create. If unset, it will be deduced from the `resource_id`.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type EnvironmentHaresourceObservation struct {

	// (String) The comment associated with this resource.
	// The comment associated with this resource.
	Comment *string `json:"comment,omitempty" tf:"comment,omitempty"`

	// (String) The identifier of the High Availability group this resource is a member of.
	// The identifier of the High Availability group this resource is a member of.
	Group *string `json:"group,omitempty" tf:"group,omitempty"`

	// (String) The unique identifier of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (Number) The maximal number of relocation attempts.
	// The maximal number of relocation attempts.
	MaxRelocate *float64 `json:"maxRelocate,omitempty" tf:"max_relocate,omitempty"`

	// (Number) The maximal number of restart attempts.
	// The maximal number of restart attempts.
	MaxRestart *float64 `json:"maxRestart,omitempty" tf:"max_restart,omitempty"`

	// (String) The Proxmox HA resource identifier
	// The Proxmox HA resource identifier
	ResourceID *string `json:"resourceId,omitempty" tf:"resource_id,omitempty"`

	// (String) The desired state of the resource.
	// The desired state of the resource.
	State *string `json:"state,omitempty" tf:"state,omitempty"`

	// (String) The type of HA resources to create. If unset, it will be deduced from the resource_id.
	// The type of HA resources to create. If unset, it will be deduced from the `resource_id`.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type EnvironmentHaresourceParameters struct {

	// (String) The comment associated with this resource.
	// The comment associated with this resource.
	// +kubebuilder:validation:Optional
	Comment *string `json:"comment,omitempty" tf:"comment,omitempty"`

	// (String) The identifier of the High Availability group this resource is a member of.
	// The identifier of the High Availability group this resource is a member of.
	// +kubebuilder:validation:Optional
	Group *string `json:"group,omitempty" tf:"group,omitempty"`

	// (Number) The maximal number of relocation attempts.
	// The maximal number of relocation attempts.
	// +kubebuilder:validation:Optional
	MaxRelocate *float64 `json:"maxRelocate,omitempty" tf:"max_relocate,omitempty"`

	// (Number) The maximal number of restart attempts.
	// The maximal number of restart attempts.
	// +kubebuilder:validation:Optional
	MaxRestart *float64 `json:"maxRestart,omitempty" tf:"max_restart,omitempty"`

	// (String) The Proxmox HA resource identifier
	// The Proxmox HA resource identifier
	// +kubebuilder:validation:Optional
	ResourceID *string `json:"resourceId,omitempty" tf:"resource_id,omitempty"`

	// (String) The desired state of the resource.
	// The desired state of the resource.
	// +kubebuilder:validation:Optional
	State *string `json:"state,omitempty" tf:"state,omitempty"`

	// (String) The type of HA resources to create. If unset, it will be deduced from the resource_id.
	// The type of HA resources to create. If unset, it will be deduced from the `resource_id`.
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

// EnvironmentHaresourceSpec defines the desired state of EnvironmentHaresource
type EnvironmentHaresourceSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     EnvironmentHaresourceParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider EnvironmentHaresourceInitParameters `json:"initProvider,omitempty"`
}

// EnvironmentHaresourceStatus defines the observed state of EnvironmentHaresource.
type EnvironmentHaresourceStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        EnvironmentHaresourceObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// EnvironmentHaresource is the Schema for the EnvironmentHaresources API. Manages Proxmox HA resources.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,proxmoxbpg}
type EnvironmentHaresource struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.resourceId) || (has(self.initProvider) && has(self.initProvider.resourceId))",message="spec.forProvider.resourceId is a required parameter"
	Spec   EnvironmentHaresourceSpec   `json:"spec"`
	Status EnvironmentHaresourceStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// EnvironmentHaresourceList contains a list of EnvironmentHaresources
type EnvironmentHaresourceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []EnvironmentHaresource `json:"items"`
}

// Repository type metadata.
var (
	EnvironmentHaresource_Kind             = "EnvironmentHaresource"
	EnvironmentHaresource_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: EnvironmentHaresource_Kind}.String()
	EnvironmentHaresource_KindAPIVersion   = EnvironmentHaresource_Kind + "." + CRDGroupVersion.String()
	EnvironmentHaresource_GroupVersionKind = CRDGroupVersion.WithKind(EnvironmentHaresource_Kind)
)

func init() {
	SchemeBuilder.Register(&EnvironmentHaresource{}, &EnvironmentHaresourceList{})
}
