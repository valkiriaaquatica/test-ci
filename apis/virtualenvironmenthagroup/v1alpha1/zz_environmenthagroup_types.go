// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type EnvironmentHagroupInitParameters struct {

	// (String) The comment associated with this group
	// The comment associated with this group
	Comment *string `json:"comment,omitempty" tf:"comment,omitempty"`

	// (String) The identifier of the High Availability group to manage.
	// The identifier of the High Availability group to manage.
	Group *string `json:"group,omitempty" tf:"group,omitempty"`

	// (Boolean) A flag that indicates that failing back to a higher priority node is disabled for this HA group. Defaults to false.
	// A flag that indicates that failing back to a higher priority node is disabled for this HA group. Defaults to `false`.
	NoFailback *bool `json:"noFailback,omitempty" tf:"no_failback,omitempty"`

	// (Map of Number) The member nodes for this group. They are provided as a map, where the keys are the node names and the values represent their priority: integers for known priorities or null for unset priorities.
	// The member nodes for this group. They are provided as a map, where the keys are the node names and the values represent their priority: integers for known priorities or `null` for unset priorities.
	// +mapType=granular
	Nodes map[string]*float64 `json:"nodes,omitempty" tf:"nodes,omitempty"`

	// (Boolean) A flag that indicates that other nodes may not be used to run resources associated to this HA group. Defaults to false.
	// A flag that indicates that other nodes may not be used to run resources associated to this HA group. Defaults to `false`.
	Restricted *bool `json:"restricted,omitempty" tf:"restricted,omitempty"`
}

type EnvironmentHagroupObservation struct {

	// (String) The comment associated with this group
	// The comment associated with this group
	Comment *string `json:"comment,omitempty" tf:"comment,omitempty"`

	// (String) The identifier of the High Availability group to manage.
	// The identifier of the High Availability group to manage.
	Group *string `json:"group,omitempty" tf:"group,omitempty"`

	// (String) The unique identifier of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (Boolean) A flag that indicates that failing back to a higher priority node is disabled for this HA group. Defaults to false.
	// A flag that indicates that failing back to a higher priority node is disabled for this HA group. Defaults to `false`.
	NoFailback *bool `json:"noFailback,omitempty" tf:"no_failback,omitempty"`

	// (Map of Number) The member nodes for this group. They are provided as a map, where the keys are the node names and the values represent their priority: integers for known priorities or null for unset priorities.
	// The member nodes for this group. They are provided as a map, where the keys are the node names and the values represent their priority: integers for known priorities or `null` for unset priorities.
	// +mapType=granular
	Nodes map[string]*float64 `json:"nodes,omitempty" tf:"nodes,omitempty"`

	// (Boolean) A flag that indicates that other nodes may not be used to run resources associated to this HA group. Defaults to false.
	// A flag that indicates that other nodes may not be used to run resources associated to this HA group. Defaults to `false`.
	Restricted *bool `json:"restricted,omitempty" tf:"restricted,omitempty"`
}

type EnvironmentHagroupParameters struct {

	// (String) The comment associated with this group
	// The comment associated with this group
	// +kubebuilder:validation:Optional
	Comment *string `json:"comment,omitempty" tf:"comment,omitempty"`

	// (String) The identifier of the High Availability group to manage.
	// The identifier of the High Availability group to manage.
	// +kubebuilder:validation:Optional
	Group *string `json:"group,omitempty" tf:"group,omitempty"`

	// (Boolean) A flag that indicates that failing back to a higher priority node is disabled for this HA group. Defaults to false.
	// A flag that indicates that failing back to a higher priority node is disabled for this HA group. Defaults to `false`.
	// +kubebuilder:validation:Optional
	NoFailback *bool `json:"noFailback,omitempty" tf:"no_failback,omitempty"`

	// (Map of Number) The member nodes for this group. They are provided as a map, where the keys are the node names and the values represent their priority: integers for known priorities or null for unset priorities.
	// The member nodes for this group. They are provided as a map, where the keys are the node names and the values represent their priority: integers for known priorities or `null` for unset priorities.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Nodes map[string]*float64 `json:"nodes,omitempty" tf:"nodes,omitempty"`

	// (Boolean) A flag that indicates that other nodes may not be used to run resources associated to this HA group. Defaults to false.
	// A flag that indicates that other nodes may not be used to run resources associated to this HA group. Defaults to `false`.
	// +kubebuilder:validation:Optional
	Restricted *bool `json:"restricted,omitempty" tf:"restricted,omitempty"`
}

// EnvironmentHagroupSpec defines the desired state of EnvironmentHagroup
type EnvironmentHagroupSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     EnvironmentHagroupParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider EnvironmentHagroupInitParameters `json:"initProvider,omitempty"`
}

// EnvironmentHagroupStatus defines the observed state of EnvironmentHagroup.
type EnvironmentHagroupStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        EnvironmentHagroupObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// EnvironmentHagroup is the Schema for the EnvironmentHagroups API. Manages a High Availability group in a Proxmox VE cluster.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,proxmoxbpg}
type EnvironmentHagroup struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.group) || (has(self.initProvider) && has(self.initProvider.group))",message="spec.forProvider.group is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.nodes) || (has(self.initProvider) && has(self.initProvider.nodes))",message="spec.forProvider.nodes is a required parameter"
	Spec   EnvironmentHagroupSpec   `json:"spec"`
	Status EnvironmentHagroupStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// EnvironmentHagroupList contains a list of EnvironmentHagroups
type EnvironmentHagroupList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []EnvironmentHagroup `json:"items"`
}

// Repository type metadata.
var (
	EnvironmentHagroup_Kind             = "EnvironmentHagroup"
	EnvironmentHagroup_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: EnvironmentHagroup_Kind}.String()
	EnvironmentHagroup_KindAPIVersion   = EnvironmentHagroup_Kind + "." + CRDGroupVersion.String()
	EnvironmentHagroup_GroupVersionKind = CRDGroupVersion.WithKind(EnvironmentHagroup_Kind)
)

func init() {
	SchemeBuilder.Register(&EnvironmentHagroup{}, &EnvironmentHagroupList{})
}
