// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type EnvironmentAcmeAccountInitParameters struct {

	// (String) The contact email addresses.
	// The contact email addresses.
	Contact *string `json:"contact,omitempty" tf:"contact,omitempty"`

	// (String) The URL of the ACME CA directory endpoint.
	// The URL of the ACME CA directory endpoint.
	Directory *string `json:"directory,omitempty" tf:"directory,omitempty"`

	// (String) The HMAC key for External Account Binding.
	// The HMAC key for External Account Binding.
	EabHMACKey *string `json:"eabHmacKey,omitempty" tf:"eab_hmac_key,omitempty"`

	// (String) The Key Identifier for External Account Binding.
	// The Key Identifier for External Account Binding.
	EabKid *string `json:"eabKid,omitempty" tf:"eab_kid,omitempty"`

	// (String) The ACME account config file name.
	// The ACME account config file name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// setting this indicates agreement.
	// The URL of CA TermsOfService - setting this indicates agreement.
	Tos *string `json:"tos,omitempty" tf:"tos,omitempty"`
}

type EnvironmentAcmeAccountObservation struct {

	// (String) The contact email addresses.
	// The contact email addresses.
	Contact *string `json:"contact,omitempty" tf:"contact,omitempty"`

	// (String) The timestamp of the ACME account creation.
	// The timestamp of the ACME account creation.
	CreatedAt *string `json:"createdAt,omitempty" tf:"created_at,omitempty"`

	// (String) The URL of the ACME CA directory endpoint.
	// The URL of the ACME CA directory endpoint.
	Directory *string `json:"directory,omitempty" tf:"directory,omitempty"`

	// (String) The HMAC key for External Account Binding.
	// The HMAC key for External Account Binding.
	EabHMACKey *string `json:"eabHmacKey,omitempty" tf:"eab_hmac_key,omitempty"`

	// (String) The Key Identifier for External Account Binding.
	// The Key Identifier for External Account Binding.
	EabKid *string `json:"eabKid,omitempty" tf:"eab_kid,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) The location of the ACME account.
	// The location of the ACME account.
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// (String) The ACME account config file name.
	// The ACME account config file name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// setting this indicates agreement.
	// The URL of CA TermsOfService - setting this indicates agreement.
	Tos *string `json:"tos,omitempty" tf:"tos,omitempty"`
}

type EnvironmentAcmeAccountParameters struct {

	// (String) The contact email addresses.
	// The contact email addresses.
	// +kubebuilder:validation:Optional
	Contact *string `json:"contact,omitempty" tf:"contact,omitempty"`

	// (String) The URL of the ACME CA directory endpoint.
	// The URL of the ACME CA directory endpoint.
	// +kubebuilder:validation:Optional
	Directory *string `json:"directory,omitempty" tf:"directory,omitempty"`

	// (String) The HMAC key for External Account Binding.
	// The HMAC key for External Account Binding.
	// +kubebuilder:validation:Optional
	EabHMACKey *string `json:"eabHmacKey,omitempty" tf:"eab_hmac_key,omitempty"`

	// (String) The Key Identifier for External Account Binding.
	// The Key Identifier for External Account Binding.
	// +kubebuilder:validation:Optional
	EabKid *string `json:"eabKid,omitempty" tf:"eab_kid,omitempty"`

	// (String) The ACME account config file name.
	// The ACME account config file name.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// setting this indicates agreement.
	// The URL of CA TermsOfService - setting this indicates agreement.
	// +kubebuilder:validation:Optional
	Tos *string `json:"tos,omitempty" tf:"tos,omitempty"`
}

// EnvironmentAcmeAccountSpec defines the desired state of EnvironmentAcmeAccount
type EnvironmentAcmeAccountSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     EnvironmentAcmeAccountParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider EnvironmentAcmeAccountInitParameters `json:"initProvider,omitempty"`
}

// EnvironmentAcmeAccountStatus defines the observed state of EnvironmentAcmeAccount.
type EnvironmentAcmeAccountStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        EnvironmentAcmeAccountObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// EnvironmentAcmeAccount is the Schema for the EnvironmentAcmeAccounts API. Manages an ACME account in a Proxmox VE cluster. ~> This resource requires root@pam authentication.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,proxmoxbpg}
type EnvironmentAcmeAccount struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.contact) || (has(self.initProvider) && has(self.initProvider.contact))",message="spec.forProvider.contact is a required parameter"
	Spec   EnvironmentAcmeAccountSpec   `json:"spec"`
	Status EnvironmentAcmeAccountStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// EnvironmentAcmeAccountList contains a list of EnvironmentAcmeAccounts
type EnvironmentAcmeAccountList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []EnvironmentAcmeAccount `json:"items"`
}

// Repository type metadata.
var (
	EnvironmentAcmeAccount_Kind             = "EnvironmentAcmeAccount"
	EnvironmentAcmeAccount_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: EnvironmentAcmeAccount_Kind}.String()
	EnvironmentAcmeAccount_KindAPIVersion   = EnvironmentAcmeAccount_Kind + "." + CRDGroupVersion.String()
	EnvironmentAcmeAccount_GroupVersionKind = CRDGroupVersion.WithKind(EnvironmentAcmeAccount_Kind)
)

func init() {
	SchemeBuilder.Register(&EnvironmentAcmeAccount{}, &EnvironmentAcmeAccountList{})
}
