// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type EnvironmentClusterFirewallInitParameters struct {

	// Enable ebtables rules cluster wide.
	// Enable ebtables cluster-wide
	Ebtables *bool `json:"ebtables,omitempty" tf:"ebtables,omitempty"`

	// Enable or disable the firewall cluster wide.
	// Enable or disable the firewall cluster-wide
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// The default forward policy (ACCEPT, DROP).
	// Default policy for forwarded traffic
	ForwardPolicy *string `json:"forwardPolicy,omitempty" tf:"forward_policy,omitempty"`

	// The default input policy (ACCEPT, DROP, REJECT).
	// Default policy for incoming traffic
	InputPolicy *string `json:"inputPolicy,omitempty" tf:"input_policy,omitempty"`

	// The log rate limit.
	// Log ratelimiting settings
	LogRatelimit []LogRatelimitInitParameters `json:"logRatelimit,omitempty" tf:"log_ratelimit,omitempty"`

	// The default output policy (ACCEPT, DROP, REJECT).
	// Default policy for outgoing traffic
	OutputPolicy *string `json:"outputPolicy,omitempty" tf:"output_policy,omitempty"`
}

type EnvironmentClusterFirewallObservation struct {

	// Enable ebtables rules cluster wide.
	// Enable ebtables cluster-wide
	Ebtables *bool `json:"ebtables,omitempty" tf:"ebtables,omitempty"`

	// Enable or disable the firewall cluster wide.
	// Enable or disable the firewall cluster-wide
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// The default forward policy (ACCEPT, DROP).
	// Default policy for forwarded traffic
	ForwardPolicy *string `json:"forwardPolicy,omitempty" tf:"forward_policy,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The default input policy (ACCEPT, DROP, REJECT).
	// Default policy for incoming traffic
	InputPolicy *string `json:"inputPolicy,omitempty" tf:"input_policy,omitempty"`

	// The log rate limit.
	// Log ratelimiting settings
	LogRatelimit []LogRatelimitObservation `json:"logRatelimit,omitempty" tf:"log_ratelimit,omitempty"`

	// The default output policy (ACCEPT, DROP, REJECT).
	// Default policy for outgoing traffic
	OutputPolicy *string `json:"outputPolicy,omitempty" tf:"output_policy,omitempty"`
}

type EnvironmentClusterFirewallParameters struct {

	// Enable ebtables rules cluster wide.
	// Enable ebtables cluster-wide
	// +kubebuilder:validation:Optional
	Ebtables *bool `json:"ebtables,omitempty" tf:"ebtables,omitempty"`

	// Enable or disable the firewall cluster wide.
	// Enable or disable the firewall cluster-wide
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// The default forward policy (ACCEPT, DROP).
	// Default policy for forwarded traffic
	// +kubebuilder:validation:Optional
	ForwardPolicy *string `json:"forwardPolicy,omitempty" tf:"forward_policy,omitempty"`

	// The default input policy (ACCEPT, DROP, REJECT).
	// Default policy for incoming traffic
	// +kubebuilder:validation:Optional
	InputPolicy *string `json:"inputPolicy,omitempty" tf:"input_policy,omitempty"`

	// The log rate limit.
	// Log ratelimiting settings
	// +kubebuilder:validation:Optional
	LogRatelimit []LogRatelimitParameters `json:"logRatelimit,omitempty" tf:"log_ratelimit,omitempty"`

	// The default output policy (ACCEPT, DROP, REJECT).
	// Default policy for outgoing traffic
	// +kubebuilder:validation:Optional
	OutputPolicy *string `json:"outputPolicy,omitempty" tf:"output_policy,omitempty"`
}

type LogRatelimitInitParameters struct {

	// Initial burst of packages which will always get
	// logged before the rate is applied (defaults to 5).
	// Initial burst of packages which will always get logged before the rate is applied
	Burst *float64 `json:"burst,omitempty" tf:"burst,omitempty"`

	// Enable or disable the firewall cluster wide.
	// Enable or disable log ratelimiting
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Frequency with which the burst bucket gets refilled
	// (defaults to 1/second).
	// Frequency with which the burst bucket gets refilled
	Rate *string `json:"rate,omitempty" tf:"rate,omitempty"`
}

type LogRatelimitObservation struct {

	// Initial burst of packages which will always get
	// logged before the rate is applied (defaults to 5).
	// Initial burst of packages which will always get logged before the rate is applied
	Burst *float64 `json:"burst,omitempty" tf:"burst,omitempty"`

	// Enable or disable the firewall cluster wide.
	// Enable or disable log ratelimiting
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Frequency with which the burst bucket gets refilled
	// (defaults to 1/second).
	// Frequency with which the burst bucket gets refilled
	Rate *string `json:"rate,omitempty" tf:"rate,omitempty"`
}

type LogRatelimitParameters struct {

	// Initial burst of packages which will always get
	// logged before the rate is applied (defaults to 5).
	// Initial burst of packages which will always get logged before the rate is applied
	// +kubebuilder:validation:Optional
	Burst *float64 `json:"burst,omitempty" tf:"burst,omitempty"`

	// Enable or disable the firewall cluster wide.
	// Enable or disable log ratelimiting
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Frequency with which the burst bucket gets refilled
	// (defaults to 1/second).
	// Frequency with which the burst bucket gets refilled
	// +kubebuilder:validation:Optional
	Rate *string `json:"rate,omitempty" tf:"rate,omitempty"`
}

// EnvironmentClusterFirewallSpec defines the desired state of EnvironmentClusterFirewall
type EnvironmentClusterFirewallSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     EnvironmentClusterFirewallParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider EnvironmentClusterFirewallInitParameters `json:"initProvider,omitempty"`
}

// EnvironmentClusterFirewallStatus defines the observed state of EnvironmentClusterFirewall.
type EnvironmentClusterFirewallStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        EnvironmentClusterFirewallObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// EnvironmentClusterFirewall is the Schema for the EnvironmentClusterFirewalls API. |  Manages firewall options on the cluster level.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,proxmoxbpg}
type EnvironmentClusterFirewall struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              EnvironmentClusterFirewallSpec   `json:"spec"`
	Status            EnvironmentClusterFirewallStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// EnvironmentClusterFirewallList contains a list of EnvironmentClusterFirewalls
type EnvironmentClusterFirewallList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []EnvironmentClusterFirewall `json:"items"`
}

// Repository type metadata.
var (
	EnvironmentClusterFirewall_Kind             = "EnvironmentClusterFirewall"
	EnvironmentClusterFirewall_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: EnvironmentClusterFirewall_Kind}.String()
	EnvironmentClusterFirewall_KindAPIVersion   = EnvironmentClusterFirewall_Kind + "." + CRDGroupVersion.String()
	EnvironmentClusterFirewall_GroupVersionKind = CRDGroupVersion.WithKind(EnvironmentClusterFirewall_Kind)
)

func init() {
	SchemeBuilder.Register(&EnvironmentClusterFirewall{}, &EnvironmentClusterFirewallList{})
}
